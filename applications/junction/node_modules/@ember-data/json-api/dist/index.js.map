{"version":3,"file":"index.js","sources":["../src/-private/validate-document-fields.ts","../src/-private/validator/utils.ts","../src/-private/validator/1.1/7.1_top-level-document-members.ts","../src/-private/validator/1.1/links.ts","../src/-private/validator/1.1/7.2_resource-objects.ts","../src/-private/validator/index.ts","../src/-private/cache.ts"],"sourcesContent":["import type { SchemaService } from '@ember-data/store/types';\nimport type { LegacyBelongsToField, LegacyHasManyField } from '@warp-drive/core-types/schema/fields';\nimport type {\n  CollectionResourceDocument,\n  ExistingResourceIdentifierObject,\n  ExistingResourceObject,\n  InnerRelationshipDocument,\n  SingleResourceDocument,\n} from '@warp-drive/core-types/spec/json-api-raw';\n\nexport function validateDocumentFields(\n  schema: SchemaService,\n  jsonApiDoc: SingleResourceDocument | CollectionResourceDocument\n) {\n  const { data, included } = jsonApiDoc;\n  if (data === null) {\n    return;\n  }\n\n  if (typeof jsonApiDoc.data !== 'object') {\n    throw new Error(\n      `Expected a resource object in the 'data' property in the document provided to the cache, but was ${typeof jsonApiDoc.data}`\n    );\n  }\n\n  if (Array.isArray(data)) {\n    for (const resource of data) {\n      validateResourceFields(schema, resource, { verifyIncluded: true, included });\n    }\n  } else {\n    validateResourceFields(schema, data, { verifyIncluded: true, included });\n  }\n\n  if (included) {\n    for (const resource of included) {\n      validateResourceFields(schema, resource, { verifyIncluded: false });\n    }\n  }\n}\n\ntype ValidateResourceFieldsOptions =\n  | {\n      verifyIncluded: true;\n      included: ExistingResourceObject[] | undefined;\n    }\n  | {\n      verifyIncluded: false;\n    };\n\nfunction validateResourceFields(\n  schema: SchemaService,\n  resource: ExistingResourceObject,\n  options: ValidateResourceFieldsOptions\n) {\n  if (!resource.relationships) {\n    return;\n  }\n\n  const resourceType = resource.type;\n  const fields = schema.fields({ type: resource.type });\n  for (const [type, relationshipDoc] of Object.entries(resource.relationships)) {\n    const field = fields.get(type);\n    if (!field) {\n      return;\n    }\n    switch (field.kind) {\n      case 'belongsTo': {\n        if (field.options.linksMode) {\n          validateBelongsToLinksMode(resourceType, field, relationshipDoc, options);\n        }\n        break;\n      }\n      case 'hasMany': {\n        if (field.options.linksMode) {\n          validateHasManyToLinksMode(resourceType, field, relationshipDoc, options);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n}\n\nfunction validateBelongsToLinksMode(\n  resourceType: string,\n  field: LegacyBelongsToField,\n  relationshipDoc: InnerRelationshipDocument<ExistingResourceIdentifierObject>,\n  options: ValidateResourceFieldsOptions\n) {\n  if (field.options.async) {\n    throw new Error(\n      `Cannot fetch ${resourceType}.${field.name} because the field is in linksMode but async is not yet supported`\n    );\n  }\n\n  if (!relationshipDoc.links?.related) {\n    throw new Error(\n      `Cannot fetch ${resourceType}.${field.name} because the field is in linksMode but the related link is missing`\n    );\n  }\n\n  const relationshipData = relationshipDoc.data;\n  if (Array.isArray(relationshipData)) {\n    throw new Error(\n      `Cannot fetch ${resourceType}.${field.name} because the relationship data for a belongsTo relationship is unexpectedly an array`\n    );\n  }\n  // Explicitly allow `null`! Missing key or `undefined` are always invalid.\n  if (relationshipData === undefined) {\n    throw new Error(\n      `Cannot fetch ${resourceType}.${field.name} because the field is in linksMode but the relationship data is undefined`\n    );\n  }\n  if (relationshipData === null) {\n    return;\n  }\n\n  if (!options.verifyIncluded) {\n    return;\n  }\n  const includedDoc = options.included?.find(\n    (doc) => doc.type === relationshipData.type && doc.id === relationshipData.id\n  );\n  if (!includedDoc) {\n    throw new Error(\n      `Cannot fetch ${resourceType}.${field.name} because the field is in linksMode but the related data is not included`\n    );\n  }\n}\n\nfunction validateHasManyToLinksMode(\n  resourceType: string,\n  field: LegacyHasManyField,\n  _relationshipDoc: InnerRelationshipDocument<ExistingResourceIdentifierObject>,\n  _options: ValidateResourceFieldsOptions\n) {\n  if (field.options.async) {\n    throw new Error(\n      `Cannot fetch ${resourceType}.${field.name} because the field is in linksMode but async hasMany is not yet supported`\n    );\n  }\n}\n","import type { FuseResult } from 'fuse.js';\nimport Fuse from 'fuse.js';\nimport type { ArrayNode, ObjectNode } from 'json-to-ast';\nimport jsonToAst from 'json-to-ast';\n\nimport type { CacheCapabilitiesManager } from '@ember-data/store/types';\nimport { JSON_API_CACHE_VALIDATION_ERRORS } from '@warp-drive/build-config/canary-features';\nimport { assert } from '@warp-drive/build-config/macros';\nimport type {\n  StructuredDataDocument,\n  StructuredDocument,\n  StructuredErrorDocument,\n} from '@warp-drive/core-types/request';\nimport type { FieldSchema } from '@warp-drive/core-types/schema/fields';\nimport type {\n  ResourceDataDocument,\n  ResourceDocument,\n  ResourceErrorDocument,\n  ResourceMetaDocument,\n} from '@warp-drive/core-types/spec/document';\n\nexport function inspectType(obj: unknown): string {\n  if (obj === null) {\n    return 'null';\n  }\n  if (Array.isArray(obj)) {\n    return 'array';\n  }\n  if (typeof obj === 'object') {\n    const proto = Object.getPrototypeOf(obj) as unknown;\n    if (proto === null) {\n      return 'object';\n    }\n    if (proto === Object.prototype) {\n      return 'object';\n    }\n    return `object (${(proto as object).constructor?.name})`;\n  }\n  if (typeof obj === 'function') {\n    return 'function';\n  }\n  if (typeof obj === 'string') {\n    return 'string';\n  }\n  if (typeof obj === 'number') {\n    return 'number';\n  }\n  if (typeof obj === 'boolean') {\n    return 'boolean';\n  }\n  if (typeof obj === 'symbol') {\n    return 'symbol';\n  }\n  if (typeof obj === 'bigint') {\n    return 'bigint';\n  }\n  if (typeof obj === 'undefined') {\n    return 'undefined';\n  }\n  return 'unknown';\n}\n\nexport function isSimpleObject(obj: unknown): obj is Record<string, unknown> {\n  if (obj === null) {\n    return false;\n  }\n  if (Array.isArray(obj)) {\n    return false;\n  }\n  if (typeof obj !== 'object') {\n    return false;\n  }\n\n  const proto = Object.getPrototypeOf(obj) as unknown;\n  if (proto === null) {\n    return true;\n  }\n  if (proto === Object.prototype) {\n    return true;\n  }\n  return false;\n}\n\nexport const RELATIONSHIP_FIELD_KINDS = ['belongsTo', 'hasMany', 'resource', 'collection'];\nexport type PathLike = Array<string | number>;\ninterface ErrorReport {\n  path: PathLike;\n  message: string;\n  loc: {\n    start: { line: number; column: number; offset: number };\n    end: { line: number; column: number; offset: number };\n  };\n  type: 'error' | 'warning' | 'info';\n  kind: 'key' | 'value';\n}\nexport class Reporter {\n  capabilities: CacheCapabilitiesManager;\n  contextDocument: StructuredDocument<ResourceDocument>;\n  errors: ErrorReport[] = [];\n  ast: ReturnType<typeof jsonToAst>;\n  jsonStr: string;\n\n  // TODO @runspired make this configurable to consuming apps before\n  // activating by default\n  strict = {\n    linkage: true,\n    unknownType: true,\n    unknownAttribute: true,\n    unknownRelationship: true,\n  };\n\n  constructor(capabilities: CacheCapabilitiesManager, doc: StructuredDocument<ResourceDocument>) {\n    this.capabilities = capabilities;\n    this.contextDocument = doc;\n\n    this.jsonStr = JSON.stringify(doc.content, null, 2);\n    this.ast = jsonToAst(this.jsonStr, { loc: true });\n  }\n\n  declare _typeFilter: Fuse<string> | undefined;\n  searchTypes(type: string) {\n    if (!this._typeFilter) {\n      const allTypes = this.schema.resourceTypes();\n      this._typeFilter = new Fuse(allTypes);\n    }\n    const result = this._typeFilter.search(type);\n    return result;\n  }\n\n  _fieldFilters: Map<string, Fuse<string>> = new Map();\n  searchFields(type: string, field: string) {\n    if (!this._fieldFilters.has(type)) {\n      const allFields = this.schema.fields({ type });\n      const attrs = Array.from(allFields.values())\n        .filter(isRemoteField)\n        .map((v) => v.name);\n      this._fieldFilters.set(type, new Fuse(attrs));\n    }\n    const result = this._fieldFilters.get(type)!.search(field);\n    return result;\n  }\n\n  get schema() {\n    return this.capabilities.schema;\n  }\n\n  getLocation(\n    path: PathLike,\n    kind: 'key' | 'value'\n  ): {\n    start: { line: number; column: number; offset: number };\n    end: { line: number; column: number; offset: number };\n  } {\n    if (path.length === 0) {\n      return this.ast.loc!;\n    }\n\n    let priorNode = this.ast as ObjectNode | ArrayNode;\n    let node = this.ast as ObjectNode | ArrayNode;\n    for (const segment of path) {\n      //\n      // handle array paths\n      //\n      if (typeof segment === 'number') {\n        assert(`Because the segment is a number, expected a node of type Array`, node.type === 'Array');\n\n        if (node.children && node.children[segment]) {\n          priorNode = node;\n          const childNode = node.children[segment];\n\n          if (childNode.type === 'Object' || childNode.type === 'Array') {\n            node = childNode;\n          } else {\n            // set to the closest node we can find\n            return node.loc!;\n          }\n        } else {\n          // set to the closest node we can find\n          // as we had no children\n          return priorNode.loc!;\n        }\n\n        //\n        // handle object paths\n        //\n      } else {\n        assert(`Because the segment is a string, expected a node of type Object`, node.type === 'Object');\n\n        const child = node.children.find((childCandidate) => {\n          if (childCandidate.type === 'Property') {\n            return childCandidate.key.type === 'Identifier' && childCandidate.key.value === segment;\n          }\n          return false;\n        });\n\n        if (child) {\n          if (child.value.type === 'Object' || child.value.type === 'Array') {\n            priorNode = node;\n            node = child.value;\n          } else {\n            // set to the closest node we can find\n            return kind === 'key' ? child.key.loc! : child.value.loc!;\n          }\n        } else {\n          // set to the closest node we can find\n          return priorNode.loc!;\n        }\n      }\n    }\n\n    return node.loc!;\n  }\n\n  error(path: PathLike, message: string, kind: 'key' | 'value' = 'key') {\n    const loc = this.getLocation(path, kind);\n    this.errors.push({ path, message, loc, type: 'error', kind });\n  }\n\n  warn(path: PathLike, message: string, kind: 'key' | 'value' = 'key') {\n    const loc = this.getLocation(path, kind);\n    this.errors.push({ path, message, loc, type: 'warning', kind });\n  }\n\n  info(path: PathLike, message: string, kind: 'key' | 'value' = 'key') {\n    const loc = this.getLocation(path, kind);\n    this.errors.push({ path, message, loc, type: 'info', kind });\n  }\n\n  hasExtension(extensionName: string) {\n    return REGISTERED_EXTENSIONS.has(extensionName);\n  }\n\n  getExtension(extensionName: string) {\n    return REGISTERED_EXTENSIONS.get(extensionName);\n  }\n\n  report(colorize = true): void {\n    const lines = this.jsonStr.split('\\n');\n\n    // sort the errors by line, then by column, then by type\n    const { errors } = this;\n\n    if (!errors.length) {\n      return;\n    }\n\n    errors.sort((a, b) => {\n      return a.loc.end.line < b.loc.end.line\n        ? -1\n        : a.loc.end.column < b.loc.end.column\n          ? -1\n          : compareType(a.type, b.type);\n    });\n\n    // store the errors in a map by line\n    const errorMap = new Map<number, ErrorReport[]>();\n    for (const error of errors) {\n      const line = error.loc.end.line;\n      if (!errorMap.has(line)) {\n        errorMap.set(line, []);\n      }\n      errorMap.get(line)!.push(error);\n    }\n\n    // splice the errors into the lines\n    const errorLines: string[] = [];\n    const colors: string[] = [];\n    const counts = {\n      error: 0,\n      warning: 0,\n      info: 0,\n    };\n\n    const LINE_SIZE = String(lines.length).length;\n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      errorLines.push(\n        colorize\n          ? `${String(i + 1).padEnd(LINE_SIZE, ' ')}  \\t%c${line}%c`\n          : `${String(i + 1).padEnd(LINE_SIZE, ' ')}  \\t${line}`\n      );\n      colors.push(\n        `color: grey; background-color: transparent;`, // first color sets color\n        `color: inherit; background-color: transparent;` // second color resets the color profile\n      );\n      if (errorMap.has(i + 1)) {\n        const errorsForLine = errorMap.get(i + 1)!;\n        for (const error of errorsForLine) {\n          counts[error.type]++;\n          const { loc, message } = error;\n          const start = loc.end.line === loc.start.line ? loc.start.column - 1 : loc.end.column - 1;\n          const end = loc.end.column - 1;\n          const symbol = error.type === 'error' ? '❌' : error.type === 'warning' ? '⚠️' : 'ℹ️';\n          const errorLine = colorize\n            ? `${''.padStart(LINE_SIZE, ' ') + symbol}\\t${' '.repeat(start)}%c^${'~'.repeat(end - start)} %c//%c ${message}%c`\n            : `${''.padStart(LINE_SIZE, ' ') + symbol}\\t${' '.repeat(start)}^${'~'.repeat(end - start)} // ${message}`;\n          errorLines.push(errorLine);\n          colors.push(\n            error.type === 'error' ? 'color: red;' : error.type === 'warning' ? 'color: orange;' : 'color: blue;',\n            'color: grey;',\n            error.type === 'error' ? 'color: red;' : error.type === 'warning' ? 'color: orange;' : 'color: blue;',\n            'color: inherit; background-color: transparent;' // reset color\n          );\n        }\n      }\n    }\n\n    const contextStr = `${counts.error} errors and ${counts.warning} warnings found in the {JSON:API} document returned by ${this.contextDocument.request?.method} ${this.contextDocument.request?.url}`;\n    const errorString = contextStr + `\\n\\n` + errorLines.join('\\n');\n\n    // eslint-disable-next-line no-console, @typescript-eslint/no-unused-expressions\n    colorize ? console.log(errorString, ...colors) : console.log(errorString);\n\n    if (JSON_API_CACHE_VALIDATION_ERRORS) {\n      if (counts.error > 0) {\n        throw new Error(contextStr);\n      }\n    }\n  }\n}\n\n// we always want to sort errors first, then warnings, then info\nfunction compareType(a: 'error' | 'warning' | 'info', b: 'error' | 'warning' | 'info') {\n  if (a === b) {\n    return 0;\n  }\n  if (a === 'error') {\n    return -1;\n  }\n  if (b === 'error') {\n    return 1;\n  }\n  if (a === 'warning') {\n    return -1;\n  }\n  if (b === 'warning') {\n    return 1;\n  }\n  return 0;\n}\n\ntype ReporterFn = (reporter: Reporter, path: PathLike) => void;\nconst REGISTERED_EXTENSIONS = new Map<string, ReporterFn>();\n\nexport function isMetaDocument(\n  doc: StructuredDocument<ResourceDocument>\n): doc is StructuredDataDocument<ResourceMetaDocument> {\n  return (\n    !(doc instanceof Error) &&\n    doc.content &&\n    !('data' in doc.content) &&\n    !('included' in doc.content) &&\n    'meta' in doc.content\n  );\n}\n\nexport function isErrorDocument(\n  doc: StructuredDocument<ResourceDocument>\n): doc is StructuredErrorDocument<ResourceErrorDocument> {\n  return doc instanceof Error;\n}\n\nexport function isPushedDocument(doc: unknown): doc is { content: ResourceDataDocument } {\n  return !!doc && typeof doc === 'object' && 'content' in doc && !('request' in doc) && !('response' in doc);\n}\n\nexport function logPotentialMatches(matches: FuseResult<string>[], kind: string): string {\n  if (matches.length === 0) {\n    return '';\n  }\n\n  if (matches.length === 1) {\n    return `  Did you mean this available ${kind} \"${matches[0].item}\"?`;\n  }\n\n  const potentialMatches = matches.map((match) => match.item).join('\", \"');\n  return `  Did you mean one of these available ${kind}s: \"${potentialMatches}\"?`;\n}\n\nfunction isRemoteField(v: FieldSchema): boolean {\n  return !(v.kind === '@local' || v.kind === 'alias' || v.kind === 'derived');\n}\n\nexport function getRemoteField(fields: Map<string, FieldSchema>, key: string) {\n  const field = fields.get(key);\n  if (!field) {\n    return undefined;\n  }\n  if (!isRemoteField(field)) {\n    return undefined;\n  }\n  return field;\n}\n","import type { ResourceDocument } from '@warp-drive/core-types/spec/document';\n\nimport { inspectType, isSimpleObject, type Reporter } from '../utils';\n\nconst VALID_TOP_LEVEL_MEMBERS = ['data', 'included', 'meta', 'jsonapi', 'links'];\n\n/**\n * Reports issues which violate the JSON:API spec for top-level members.\n *\n * Version: 1.1\n * Section: 7.1\n * Link: https://jsonapi.org/format/#document-top-level\n *\n * @internal\n */\nexport function validateTopLevelDocumentMembers(reporter: Reporter, doc: ResourceDocument) {\n  const keys = Object.keys(doc);\n\n  for (const key of keys) {\n    if (!VALID_TOP_LEVEL_MEMBERS.includes(key)) {\n      if (key.includes(':')) {\n        // TODO @runspired expose the API to enable folks to add validation for their own extensions\n        const extensionName = key.split(':')[0];\n\n        if (reporter.hasExtension(extensionName)) {\n          const extension = reporter.getExtension(extensionName)!;\n          extension(reporter, [key]);\n        } else {\n          reporter.warn(\n            [key],\n            `Unrecognized extension ${extensionName}. The data provided by \"${key}\" will be ignored as it is not a valid {JSON:API} member`\n          );\n        }\n      } else {\n        reporter.error(\n          [key],\n          `Unrecognized top-level member. The data it provides is ignored as it is not a valid {JSON:API} member`\n        );\n      }\n    }\n  }\n\n  // additional rules for top-level members\n  // ======================================\n\n  // 1. MUST have either `data`, `errors`, or `meta`\n  if (!('data' in doc) && !('errors' in doc) && !('meta' in doc)) {\n    reporter.error([], 'A {JSON:API} Document must contain one-of `data` `errors` or `meta`');\n  }\n\n  // 2. MUST NOT have both `data` and `errors`\n  if ('data' in doc && 'errors' in doc) {\n    reporter.error(['data'], 'A {JSON:API} Document MUST NOT contain both `data` and `errors` members');\n  }\n\n  // 3. MUST NOT have both `included` and `errors`\n  // while not explicitly stated in the spec, this is a logical extension of the above rule\n  // since `included` is only valid when `data` is present.\n  if ('included' in doc && 'errors' in doc) {\n    reporter.error(['included'], 'A {JSON:API} Document MUST NOT contain both `included` and `errors` members');\n  }\n\n  // 4. MUST NOT have `included` if `data` is not present\n  if ('included' in doc && !('data' in doc)) {\n    reporter.error(['included'], 'A {JSON:API} Document MUST NOT contain `included` if `data` is not present');\n  }\n\n  // 5. MUST NOT have `included` if `data` is null\n  // when strictly enforcing full linkage, we need to ensure that `included` is not present if `data` is null\n  // however, most APIs will ignore this rule for DELETE requests, so unless strict linkage is enabled, we will only warn\n  // about this issue.\n  if ('included' in doc && doc.data === null) {\n    const isMaybeDelete =\n      reporter.contextDocument.request?.method?.toUpperCase() === 'DELETE' ||\n      reporter.contextDocument.request?.op === 'deleteRecord';\n    const method = !reporter.strict.linkage && isMaybeDelete ? 'warn' : 'error';\n    reporter[method](['included'], 'A {JSON:API} Document MUST NOT contain `included` if `data` is null');\n  }\n\n  // Simple Validation of Top-Level Members\n  // ==========================================\n  // 1. `data` MUST be a single resource object or an array of resource objects or `null`\n  if ('data' in doc) {\n    const dataMemberHasAppropriateForm = doc.data === null || Array.isArray(doc.data) || isSimpleObject(doc.data);\n    if (!dataMemberHasAppropriateForm) {\n      reporter.error(\n        ['data'],\n        `The 'data' member MUST be a single resource object or an array of resource objects or null. Received data of type \"${inspectType(doc.data)}\"`\n      );\n    }\n  }\n\n  // 2. `included` MUST be an array of resource objects\n  if ('included' in doc) {\n    if (!Array.isArray(doc.included)) {\n      reporter.error(\n        ['included'],\n        `The 'included' member MUST be an array of resource objects. Received data of type \"${inspectType(doc.included)}\"`\n      );\n    }\n  }\n\n  // 3. `meta` MUST be a simple object\n  if ('meta' in doc) {\n    if (!isSimpleObject(doc.meta)) {\n      reporter.error(\n        ['meta'],\n        `The 'meta' member MUST be a simple object. Received data of type \"${inspectType(doc.meta)}\"`\n      );\n    }\n  }\n\n  // 4. `jsonapi` MUST be a simple object\n  if ('jsonapi' in doc) {\n    if (!isSimpleObject(doc.jsonapi)) {\n      reporter.error(\n        ['jsonapi'],\n        `The 'jsonapi' member MUST be a simple object. Received data of type \"${inspectType(doc.jsonapi)}\"`\n      );\n    }\n  }\n\n  // 5. `links` MUST be a simple object\n  if ('links' in doc) {\n    if (!isSimpleObject(doc.links)) {\n      reporter.error(\n        ['links'],\n        `The 'links' member MUST be a simple object. Received data of type \"${inspectType(doc.links)}\"`\n      );\n    }\n  }\n\n  // 6. `errors` MUST be an array of error objects\n  if ('errors' in doc) {\n    if (!Array.isArray(doc.errors)) {\n      reporter.error(\n        ['errors'],\n        `The 'errors' member MUST be an array of error objects. Received data of type \"${inspectType(doc.errors)}\"`\n      );\n    }\n  }\n}\n","import type { ResourceDocument } from '@warp-drive/core-types/spec/document';\nimport type {\n  CollectionResourceRelationship,\n  ResourceObject,\n  SingleResourceRelationship,\n} from '@warp-drive/core-types/spec/json-api-raw';\n\nimport { inspectType, isSimpleObject, type PathLike, type Reporter } from '../utils';\n\nconst VALID_COLLECTION_LINKS = ['self', 'related', 'first', 'last', 'prev', 'next'];\nconst VALID_RESOURCE_RELATIONSHIP_LINKS = ['self', 'related'];\nconst VALID_RESOURCE_LINKS = ['self'];\n\n/**\n * Validates the links object in a top-level JSON API document or resource object\n *\n * Version: 1.1\n *\n * Section: 7.1 Top Level\n * Link: https://jsonapi.org/format/#document-top-level\n *\n * Section: 7.2.3 Resource Objects\n * Link: https://jsonapi.org/format/#document-resource-object-links\n *\n * Section: 7.2.2.2 Resource Relationships\n * Link: https://jsonapi.org/format/#document-resource-object-relationships\n *\n * Section: 7.6 Document Links\n * Link: https://jsonapi.org/format/#document-links\n *\n * @internal\n */\nexport function validateLinks(\n  reporter: Reporter,\n  doc: ResourceDocument | ResourceObject | SingleResourceRelationship | CollectionResourceRelationship,\n  type: 'collection-document' | 'resource-document' | 'resource' | 'resource-relationship' | 'collection-relationship',\n  path: PathLike = ['links']\n) {\n  if (!('links' in doc)) {\n    return;\n  }\n\n  if (!isSimpleObject(doc.links)) {\n    // this is a violation but we report it when validating section 7.1\n    return;\n  }\n\n  // prettier-ignore\n  const VALID_TOP_LEVEL_LINKS =\n    type === 'collection-document' || type === 'collection-relationship' ? VALID_COLLECTION_LINKS\n    : type === 'resource-document' || type === 'resource-relationship' ? VALID_RESOURCE_RELATIONSHIP_LINKS\n    : type === 'resource' ? VALID_RESOURCE_LINKS\n    : [];\n\n  const links = doc.links;\n  const keys = Object.keys(links);\n  for (const key of keys) {\n    if (!VALID_TOP_LEVEL_LINKS.includes(key)) {\n      reporter.warn(\n        [...path, key],\n        `Unrecognized top-level link. The data it provides may be ignored as it is not a valid {JSON:API} link for a ${type}`\n      );\n    }\n    // links may be either a string or an object with an href property or null\n    if (links[key] === null) {\n      // valid\n    } else if (typeof links[key] === 'string') {\n      if (links[key].length === 0) {\n        reporter.warn([...path, key], `Expected a non-empty string, but received an empty string`);\n      }\n      // valid, though we should potentially validate the URL here\n    } else if (isSimpleObject(links[key])) {\n      if ('href' in links[key]) {\n        const linksKeys = Object.keys(links[key]);\n        if (linksKeys.length > 1) {\n          reporter.warn(\n            [...path, key],\n            `Expected the links object to only have an href property, but received unknown keys ${linksKeys.filter((k) => k !== 'href').join(', ')}`\n          );\n        }\n\n        if (typeof links[key].href !== 'string') {\n          reporter.error(\n            [...path, key, 'href'],\n            `Expected a string value, but received ${inspectType(links[key].href)}`\n          );\n        } else {\n          if (links[key].href.length === 0) {\n            reporter.warn([...path, key, 'href'], `Expected a non-empty string, but received an empty string`);\n          }\n          // valid, though we should potentially validate the URL here\n        }\n      } else {\n        const linksKeys = Object.keys(links[key]);\n        if (linksKeys.length > 0) {\n          reporter.error(\n            [...path, key],\n            `Expected the links object to have an href property, but received only the unknown keys ${linksKeys.join(', ')}`\n          );\n        } else {\n          reporter.error([...path, key], `Expected the links object to have an href property`);\n        }\n      }\n    } else {\n      // invalid\n      reporter.error(\n        [...path, key],\n        `Expected a string, null, or an object with an href property for the link \"${key}\", but received ${inspectType(\n          links[key]\n        )}`\n      );\n    }\n  }\n}\n","import type { ResourceDocument } from '@warp-drive/core-types/spec/document';\n\nimport {\n  getRemoteField,\n  inspectType,\n  isSimpleObject,\n  logPotentialMatches,\n  type PathLike,\n  RELATIONSHIP_FIELD_KINDS,\n  type Reporter,\n} from '../utils';\nimport { validateLinks } from './links';\n\nconst SINGULAR_OPS = ['createRecord', 'updateRecord', 'deleteRecord', 'findRecord', 'queryRecord'];\n\n/**\n * Validates the resource objects in either the `data` or `included` members of\n * JSON:API document.\n *\n * Version: 1.1\n * Section: 7.2\n * Link: https://jsonapi.org/format/#document-resource-objects\n *\n * @internal\n */\nexport function validateDocumentResources(reporter: Reporter, doc: ResourceDocument) {\n  if ('data' in doc) {\n    // scan for common mistakes of single vs multiple resource objects\n    const op = reporter.contextDocument.request?.op;\n    if (op && SINGULAR_OPS.includes(op)) {\n      if (Array.isArray(doc.data)) {\n        reporter.error(\n          ['data'],\n          `\"${op}\" requests expect a single resource object in the returned data, but received an array`\n        );\n      }\n    }\n\n    // guard for a common mistake around deleteRecord\n    if (op === 'deleteRecord') {\n      if (doc.data !== null) {\n        reporter.warn(\n          ['data'],\n          `\"deleteRecord\" requests expect the data member to be null, but received ${inspectType(doc.data)}. This can sometimes cause unexpected resurrection of the deleted record.`\n        );\n      }\n    }\n\n    if (Array.isArray(doc.data)) {\n      doc.data.forEach((resource, index) => {\n        if (!isSimpleObject(resource)) {\n          reporter.error(['data', index], `Expected a resource object, but received ${inspectType(resource)}`);\n        } else {\n          validateResourceObject(reporter, resource, ['data', index]);\n        }\n      });\n    } else if (doc.data !== null) {\n      if (!isSimpleObject(doc.data)) {\n        reporter.error(['data'], `Expected a resource object, but received ${inspectType(doc.data)}`);\n      } else {\n        validateResourceObject(reporter, doc.data, ['data']);\n      }\n    }\n  }\n\n  if ('included' in doc && Array.isArray(doc.included)) {\n    doc.included.forEach((resource, index) => {\n      if (!isSimpleObject(resource)) {\n        reporter.error(['included', index], `Expected a resource object, but received ${inspectType(resource)}`);\n      } else {\n        validateResourceObject(reporter, resource, ['included', index]);\n      }\n    });\n  }\n}\n\nfunction validateResourceObject(reporter: Reporter, resource: Record<string, unknown>, path: PathLike) {\n  validateTopLevelResourceShape(reporter, resource, path);\n}\n\nconst VALID_TOP_LEVEL_RESOURCE_KEYS = ['lid', 'id', 'type', 'attributes', 'relationships', 'meta', 'links'];\nfunction validateTopLevelResourceShape(reporter: Reporter, resource: Record<string, unknown>, path: PathLike) {\n  // a resource MUST have a string type\n  if (!('type' in resource)) {\n    reporter.error([...path, 'type'], `Expected a ResourceObject to have a type property`);\n  } else if (typeof resource.type !== 'string') {\n    reporter.error(\n      [...path, 'type'],\n      `Expected a string value for the type property, but received ${inspectType(resource.type)}`,\n      'value'\n    );\n  } else if (resource.type.length === 0) {\n    reporter.error(\n      [...path, 'type'],\n      `Expected a non-empty string value for the type property, but received an empty string`,\n      'value'\n    );\n  } else if (!reporter.schema.hasResource({ type: resource.type })) {\n    const method = reporter.strict.unknownType ? 'error' : 'warn';\n    const potentialTypes = reporter.searchTypes(resource.type);\n    reporter[method](\n      [...path, 'type'],\n      `Expected a schema to be available for the ResourceType \"${resource.type}\" but none was found.${logPotentialMatches(potentialTypes, 'ResourceType')}`,\n      'value'\n    );\n  }\n\n  // a resource MUST have a string ID\n  if (!('id' in resource)) {\n    reporter.error([...path, 'id'], `Expected a ResourceObject to have an id property`);\n  } else if (typeof resource.id !== 'string') {\n    reporter.error(\n      [...path, 'id'],\n      `Expected a string value for the id property, but received ${inspectType(resource.id)}`,\n      'value'\n    );\n  } else if (resource.id.length === 0) {\n    reporter.error(\n      [...path, 'id'],\n      `Expected a non-empty string value for the id property, but received an empty string`,\n      'value'\n    );\n  }\n\n  // a resource MAY have a lid property\n  if ('lid' in resource && typeof resource.lid !== 'string') {\n    reporter.error(\n      [...path, 'lid'],\n      `Expected a string value for the lid property, but received ${inspectType(resource.lid)}`,\n      'value'\n    );\n  } else {\n    // We MAY want to validate in the future that the lid is a valid local ID\n    // and not just a string. For now, we will just check that it is a string.\n  }\n\n  // a resource MAY have a meta property\n  if ('meta' in resource && !isSimpleObject(resource.meta)) {\n    reporter.error(\n      [...path, 'meta'],\n      `Expected a simple object for the meta property, but received ${inspectType(resource.meta)}`,\n      'value'\n    );\n  }\n\n  // a resource MAY have a links property\n  if ('links' in resource && !isSimpleObject(resource.links)) {\n    reporter.error(\n      [...path, 'links'],\n      `Expected a simple object for the links property, but received ${inspectType(resource.links)}`,\n      'value'\n    );\n  } else if ('links' in resource) {\n    validateLinks(reporter, resource, 'resource', [...path, 'links']);\n  }\n\n  const hasAttributes = 'attributes' in resource && isSimpleObject(resource.attributes);\n  const hasRelationships = 'relationships' in resource && isSimpleObject(resource.relationships);\n\n  // We expect at least one of attributes or relationships to be present\n  if (!hasAttributes && !hasRelationships) {\n    reporter.warn(path, `Expected a ResourceObject to have either attributes or relationships`);\n  }\n\n  // we expect at least one of attributes or relationships to be non-empty\n  const attributesLength = hasAttributes ? Object.keys(resource.attributes as object).length : 0;\n  const relationshipsLength = hasRelationships ? Object.keys(resource.relationships as object).length : 0;\n\n  if ((hasAttributes || hasRelationships) && attributesLength === 0 && relationshipsLength === 0) {\n    reporter.warn(\n      [...path, hasAttributes ? 'attributes' : hasRelationships ? 'relationships' : 'attributes'],\n      `Expected a ResourceObject to have either non-empty attributes or non-empty relationships`\n    );\n  }\n\n  // check for unknown keys on the resource object\n  const keys = Object.keys(resource);\n  for (const key of keys) {\n    if (!VALID_TOP_LEVEL_RESOURCE_KEYS.includes(key)) {\n      // check for extension keys\n      if (key.includes(':')) {\n        const extensionName = key.split(':')[0];\n        if (reporter.hasExtension(extensionName)) {\n          const extension = reporter.getExtension(extensionName)!;\n          extension(reporter, [...path, key]);\n        } else {\n          reporter.warn(\n            [...path, key],\n            `Unrecognized extension ${extensionName}. The data provided by \"${key}\" will be ignored as it is not a valid {JSON:API} ResourceObject member`\n          );\n        }\n      } else {\n        // check if this is an attribute or relationship\n        let didYouMean = '  Likely this field should have been inside of either \"attributes\" or \"relationships\"';\n\n        const type = 'type' in resource ? (resource.type as string) : undefined;\n        if (type && reporter.schema.hasResource({ type })) {\n          const fields = reporter.schema.fields({ type });\n          const field = getRemoteField(fields, key);\n\n          if (field) {\n            const isRelationship = RELATIONSHIP_FIELD_KINDS.includes(field.kind);\n            didYouMean = `  Based on the ResourceSchema for \"${type}\" this field is likely a ${field.kind} and belongs inside of ${isRelationship ? 'relationships' : 'attributes'}, e.g. \"${isRelationship ? 'relationships' : 'attributes'}\": { \"${key}\": { ... } }`;\n          } else {\n            const fieldMatches = reporter.searchFields(type, key);\n\n            if (fieldMatches.length === 1) {\n              const matchedField = fields.get(fieldMatches[0].item)!;\n              const isRelationship = RELATIONSHIP_FIELD_KINDS.includes(matchedField.kind);\n              didYouMean = `  Based on the ResourceSchema for \"${type}\" this field is likely a ${matchedField.kind} and belongs inside of ${isRelationship ? 'relationships' : 'attributes'}, e.g. \"${isRelationship ? 'relationships' : 'attributes'}\": { \"${matchedField.name}\": { ... } }`;\n            } else if (fieldMatches.length > 1) {\n              const matchedField = fields.get(fieldMatches[0].item)!;\n              const isRelationship = RELATIONSHIP_FIELD_KINDS.includes(matchedField.kind);\n              didYouMean = `  Based on the ResourceSchema for \"${type}\" this field is likely one of \"${fieldMatches.map((v) => v.item).join('\", \"')}\" and belongs inside of either \"attributes\" or \"relationships\", e.g. \"${isRelationship ? 'relationships' : 'attributes'}\": { \"${matchedField.name}\": { ... } }`;\n            }\n          }\n        }\n\n        reporter.error(\n          [...path, key],\n          `Unrecognized ResourceObject member. The data it provides is ignored as it is not a valid {JSON:API} ResourceObject member.${didYouMean}`\n        );\n      }\n    }\n  }\n\n  // if we have a schema, validate the individual attributes and relationships\n  const type = 'type' in resource ? (resource.type as string) : undefined;\n  if (type && reporter.schema.hasResource({ type })) {\n    if ('attributes' in resource) {\n      validateResourceAttributes(reporter, type, resource.attributes as Record<string, unknown>, [\n        ...path,\n        'attributes',\n      ]);\n    }\n\n    if ('relationships' in resource) {\n      validateResourceRelationships(reporter, type, resource.relationships as Record<string, unknown>, [\n        ...path,\n        'relationships',\n      ]);\n    }\n  }\n}\n\nfunction validateResourceAttributes(\n  reporter: Reporter,\n  type: string,\n  resource: Record<string, unknown>,\n  path: PathLike\n) {\n  const schema = reporter.schema.fields({ type });\n  for (const [key] of Object.entries(resource)) {\n    const field = getRemoteField(schema, key);\n    const actualField = schema.get(key);\n    if (!field && actualField) {\n      reporter.warn(\n        [...path, key],\n        `Expected the ${actualField.kind} field to not have its own resource data. Likely this field should either not be returned in this payload or the field definition should be updated in the schema.`\n      );\n    } else if (!field) {\n      if (key.includes(':')) {\n        const extensionName = key.split(':')[0];\n        if (reporter.hasExtension(extensionName)) {\n          const extension = reporter.getExtension(extensionName)!;\n          extension(reporter, [...path, key]);\n        } else {\n          reporter.warn(\n            [...path, key],\n            `Unrecognized extension ${extensionName}. The data provided by \"${key}\" will be ignored as it is not a valid {JSON:API} ResourceObject member`\n          );\n        }\n      } else {\n        const method = reporter.strict.unknownAttribute ? 'error' : 'warn';\n\n        // TODO @runspired when we check for fuzzy matches we can adjust the message to say\n        // whether the expected field is an attribute or a relationship\n        const potentialFields = reporter.searchFields(type, key);\n        reporter[method](\n          [...path, key],\n          `Unrecognized attribute. The data it provides is ignored as it is not part of the ResourceSchema for \"${type}\".${logPotentialMatches(\n            potentialFields,\n            'field'\n          )}`\n        );\n      }\n    } else if (field && RELATIONSHIP_FIELD_KINDS.includes(field.kind)) {\n      reporter.error(\n        [...path, key],\n        `Expected the \"${key}\" field to be in \"relationships\" as it has kind \"${field.kind}\", but received data for it in \"attributes\".`\n      );\n    }\n  }\n\n  // TODO @runspired we should also deep-validate the field value\n  // TODO @runspired we should validate that field values are valid JSON and not instances\n}\n\nfunction validateResourceRelationships(\n  reporter: Reporter,\n  type: string,\n  resource: Record<string, unknown>,\n  path: PathLike\n) {\n  const schema = reporter.schema.fields({ type });\n  for (const [key] of Object.entries(resource)) {\n    const field = getRemoteField(schema, key);\n    const actualField = schema.get(key);\n    if (!field && actualField) {\n      reporter.warn(\n        [...path, key],\n        `Expected the ${actualField.kind} field to not have its own resource data. Likely this field should either not be returned in this payload or the field definition should be updated in the schema.`\n      );\n    } else if (!field) {\n      if (key.includes(':')) {\n        const extensionName = key.split(':')[0];\n        if (reporter.hasExtension(extensionName)) {\n          const extension = reporter.getExtension(extensionName)!;\n          extension(reporter, [...path, key]);\n        } else {\n          reporter.warn(\n            [...path, key],\n            `Unrecognized extension ${extensionName}. The data provided by \"${key}\" will be ignored as it is not a valid {JSON:API} ResourceObject member`\n          );\n        }\n      } else {\n        const method = reporter.strict.unknownRelationship ? 'error' : 'warn';\n\n        // TODO @runspired when we check for fuzzy matches we can adjust the message to say\n        // whether the expected field is an attribute or a relationship\n        const potentialFields = reporter.searchFields(type, key);\n        reporter[method](\n          [...path, key],\n          `Unrecognized relationship. The data it provides is ignored as it is not part of the ResourceSchema for \"${type}\".${logPotentialMatches(\n            potentialFields,\n            'field'\n          )}`\n        );\n      }\n    } else if (field && !RELATIONSHIP_FIELD_KINDS.includes(field.kind)) {\n      reporter.error(\n        [...path, key],\n        `Expected the \"${key}\" field to be in \"attributes\" as it has kind \"${field.kind}\", but received data for it in \"relationships\".`\n      );\n    }\n  }\n\n  // TODO @runspired we should also deep-validate the relationship payload\n  // TODO @runspired we should validate linksMode requirements for both Polaris and Legacy modes\n  // TODO @runspired we should warn if the discovered resource-type in a relationship is the abstract\n  //   type instead of the concrete type.\n}\n","import type { StructuredDataDocument, StructuredDocument } from '@ember-data/request';\nimport type { CacheCapabilitiesManager } from '@ember-data/store/types';\nimport { JSON_API_CACHE_VALIDATION_ERRORS } from '@warp-drive/build-config/canary-features';\nimport { LOG_CACHE } from '@warp-drive/build-config/debugging';\nimport { assert } from '@warp-drive/build-config/macros';\nimport type { ResourceDocument } from '@warp-drive/core-types/spec/document';\n\nimport { validateTopLevelDocumentMembers } from './1.1/7.1_top-level-document-members';\nimport { validateDocumentResources } from './1.1/7.2_resource-objects';\nimport { validateLinks } from './1.1/links';\nimport { isErrorDocument, isMetaDocument, isPushedDocument, Reporter } from './utils';\n\nexport function validateDocument(capabilities: CacheCapabilitiesManager, doc: StructuredDocument<ResourceDocument>) {\n  assert(\n    `Expected a JSON:API Document as the content provided to the cache, received ${typeof doc.content}`,\n    doc instanceof Error || (typeof doc.content === 'object' && doc.content !== null)\n  );\n\n  // if the feature is not active and the payloads are not being logged\n  // we don't need to validate the payloads\n  if (!JSON_API_CACHE_VALIDATION_ERRORS) {\n    if (!LOG_CACHE) {\n      return;\n    }\n  }\n\n  if (isErrorDocument(doc)) {\n    return; // return validateErrorDocument(reporter, doc);\n  } else if (isMetaDocument(doc)) {\n    return; // return validateMetaDocument(reporter, doc);\n  } else if (isPushedDocument(doc)) {\n    return; // return validatePushedDocument(reporter, doc);\n  }\n\n  const reporter = new Reporter(capabilities, doc);\n  return validateResourceDocument(reporter, doc as StructuredDataDocument<ResourceDocument>);\n}\n\n// function validateErrorDocument(reporter: Reporter, doc: StructuredErrorDocument) {}\n\n// function validateMetaDocument(reporter: Reporter, doc: StructuredDataDocument<ResourceMetaDocument>) {}\n\n// function validatePushedDocument(reporter: Reporter, doc: StructuredDataDocument<ResourceDocument>) {}\n\nfunction validateResourceDocument(reporter: Reporter, doc: StructuredDataDocument<ResourceDocument>) {\n  validateTopLevelDocumentMembers(reporter, doc.content);\n  validateLinks(\n    reporter,\n    doc.content,\n    'data' in doc.content && Array.isArray(doc.content?.data) ? 'collection-document' : 'resource-document'\n  );\n  validateDocumentResources(reporter, doc.content);\n\n  // TODO @runspired - validateMeta on document\n  // TODO @runspired - validateMeta on resource\n  // TODO @runspired - validateMeta on resource relationships\n  // TODO @runspired - validate no-meta on resource identifiers\n  //\n  // ---------------------------------\n  // super-strict-mode\n  //\n  // TODO @runspired - validate that all referenced resource identifiers are present in the document (full linkage)\n  // TODO @runspired - validate that all included resources have a path back to `data` (full linkage)\n  //\n  // ---------------------------------\n  // nice-to-haves\n  //\n  // TODO @runspired - validate links objects more thoroughly for spec props we don't use\n  // TODO @runspired - validate request includes are in fact included\n  // TODO @runspired - validate request fields are in fact present\n  // TODO @runspired - MAYBE validate request sort is in fact sorted? (useful for catching Mocking bugs)\n  // TODO @runspired - MAYBE validate request pagination is in fact paginated? (useful for catching Mocking bugs)\n\n  reporter.report();\n}\n","/**\n * @module @ember-data/json-api\n */\nimport type { CollectionEdge, Graph, GraphEdge, ImplicitEdge, ResourceEdge } from '@ember-data/graph/-private';\nimport { graphFor, isBelongsTo, peekGraph } from '@ember-data/graph/-private';\nimport type Store from '@ember-data/store';\nimport { isDocumentIdentifier, isStableIdentifier, logGroup } from '@ember-data/store/-private';\nimport type { CacheCapabilitiesManager } from '@ember-data/store/types';\nimport { LOG_CACHE } from '@warp-drive/build-config/debugging';\nimport { DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE } from '@warp-drive/build-config/deprecations';\nimport { DEBUG } from '@warp-drive/build-config/env';\nimport { assert } from '@warp-drive/build-config/macros';\nimport type { Cache, ChangedAttributesHash, RelationshipDiff } from '@warp-drive/core-types/cache';\nimport type { Change } from '@warp-drive/core-types/cache/change';\nimport type {\n  AddResourceOperation,\n  AddToDocumentOperation,\n  AddToResourceRelationshipOperation,\n  Op,\n  Operation,\n  RemoveDocumentOperation,\n  RemoveFromDocumentOperation,\n  RemoveFromResourceRelationshipOperation,\n  RemoveResourceOperation,\n  UpdateResourceFieldOperation,\n  UpdateResourceOperation,\n  UpdateResourceRelationshipOperation,\n} from '@warp-drive/core-types/cache/operations';\nimport type { CollectionRelationship, ResourceRelationship } from '@warp-drive/core-types/cache/relationship';\nimport type { LocalRelationshipOperation } from '@warp-drive/core-types/graph';\nimport type {\n  StableDocumentIdentifier,\n  StableExistingRecordIdentifier,\n  StableRecordIdentifier,\n} from '@warp-drive/core-types/identifier';\nimport type { ObjectValue, Value } from '@warp-drive/core-types/json/raw';\nimport type {\n  ImmutableRequestInfo,\n  StructuredDataDocument,\n  StructuredDocument,\n  StructuredErrorDocument,\n} from '@warp-drive/core-types/request';\nimport type {\n  CollectionField,\n  FieldSchema,\n  LegacyHasManyField,\n  LegacyRelationshipField,\n  ResourceField,\n} from '@warp-drive/core-types/schema/fields';\nimport type {\n  CollectionResourceDataDocument,\n  ResourceDataDocument,\n  ResourceDocument,\n  ResourceErrorDocument,\n  ResourceMetaDocument,\n  SingleResourceDataDocument,\n} from '@warp-drive/core-types/spec/document';\nimport type { ApiError } from '@warp-drive/core-types/spec/error';\nimport type {\n  CollectionResourceDocument,\n  ExistingResourceObject,\n  ResourceObject,\n  SingleResourceDocument,\n  SingleResourceRelationship,\n} from '@warp-drive/core-types/spec/json-api-raw';\n\nimport { validateDocumentFields } from './validate-document-fields';\nimport { validateDocument } from './validator';\nimport { isErrorDocument, isMetaDocument } from './validator/utils';\n\ntype IdentifierCache = Store['identifierCache'];\ntype InternalCapabilitiesManager = CacheCapabilitiesManager & { _store: Store };\n\nfunction isImplicit(relationship: GraphEdge): relationship is ImplicitEdge {\n  return relationship.definition.isImplicit;\n}\n\nfunction upgradeCapabilities(obj: unknown): asserts obj is InternalCapabilitiesManager {}\n\nconst EMPTY_ITERATOR = {\n  iterator() {\n    return {\n      next() {\n        return { done: true, value: undefined };\n      },\n    };\n  },\n};\n\ninterface CachedResource {\n  id: string | null;\n  remoteAttrs: Record<string, Value | undefined> | null;\n  localAttrs: Record<string, Value | undefined> | null;\n  defaultAttrs: Record<string, Value | undefined> | null;\n  inflightAttrs: Record<string, Value | undefined> | null;\n  changes: Record<string, [Value | undefined, Value]> | null;\n  errors: ApiError[] | null;\n  isNew: boolean;\n  isDeleted: boolean;\n  isDeletionCommitted: boolean;\n\n  /**\n   * debugging only\n   *\n   * @internal\n   */\n  inflightRelationships?: Record<string, unknown> | null;\n}\n\nfunction makeCache(): CachedResource {\n  return {\n    id: null,\n    remoteAttrs: null,\n    localAttrs: null,\n    defaultAttrs: null,\n    inflightAttrs: null,\n    changes: null,\n    errors: null,\n    isNew: false,\n    isDeleted: false,\n    isDeletionCommitted: false,\n  };\n}\n\n/**\n  A JSON:API Cache implementation.\n\n  What cache the store uses is configurable. Using a different\n  implementation can be achieved by implementing the store's\n  createCache hook.\n\n  This is the cache implementation used by `ember-data`.\n\n  ```js\n  import Cache from '@ember-data/json-api';\n  import Store from '@ember-data/store';\n\n  export default class extends Store {\n    createCache(wrapper) {\n      return new Cache(wrapper);\n    }\n  }\n  ```\n\n  @class Cache\n  @public\n */\n\nexport default class JSONAPICache implements Cache {\n  /**\n   * The Cache Version that this implementation implements.\n   *\n   * @type {'2'}\n   * @public\n   * @property version\n   */\n  declare version: '2';\n  declare _capabilities: CacheCapabilitiesManager;\n  declare __cache: Map<StableRecordIdentifier, CachedResource>;\n  declare __destroyedCache: Map<StableRecordIdentifier, CachedResource>;\n  declare __documents: Map<string, StructuredDocument<ResourceDocument>>;\n  declare __graph: Graph;\n\n  constructor(capabilities: CacheCapabilitiesManager) {\n    this.version = '2';\n    this._capabilities = capabilities;\n    this.__cache = new Map();\n    this.__graph = graphFor(capabilities);\n    this.__destroyedCache = new Map();\n    this.__documents = new Map();\n  }\n\n  // Cache Management\n  // ================\n\n  /**\n   * Cache the response to a request\n   *\n   * Implements `Cache.put`.\n   *\n   * Expects a StructuredDocument whose `content` member is a JsonApiDocument.\n   *\n   * ```js\n   * cache.put({\n   *   request: { url: 'https://api.example.com/v1/user/1' },\n   *   content: {\n   *     data: {\n   *       type: 'user',\n   *       id: '1',\n   *       attributes: {\n   *         name: 'Chris'\n   *       }\n   *     }\n   *   }\n   * })\n   * ```\n   *\n   * > **Note**\n   * > The nested `content` and `data` members are not a mistake. This is because\n   * > there are two separate concepts involved here, the `StructuredDocument` which contains\n   * > the context of a given Request that has been issued with the returned contents as its\n   * > `content` property, and a `JSON:API Document` which is the json contents returned by\n   * > this endpoint and which uses its `data` property to signify which resources are the\n   * > primary resources associated with the request.\n   *\n   * StructuredDocument's with urls will be cached as full documents with\n   * associated resource membership order and contents preserved but linked\n   * into the cache.\n   *\n   * @method put\n   * @param {StructuredDocument} doc\n   * @return {ResourceDocument}\n   * @public\n   */\n  put<T extends SingleResourceDocument>(doc: StructuredDataDocument<T>): SingleResourceDataDocument;\n  put<T extends CollectionResourceDocument>(doc: StructuredDataDocument<T>): CollectionResourceDataDocument;\n  put<T extends ResourceErrorDocument>(doc: StructuredErrorDocument<T>): ResourceErrorDocument;\n  put<T extends ResourceMetaDocument>(doc: StructuredDataDocument<T>): ResourceMetaDocument;\n  put(doc: StructuredDocument<ResourceDocument>): ResourceDocument {\n    if (DEBUG) {\n      validateDocument(this._capabilities, doc);\n    }\n\n    if (isErrorDocument(doc)) {\n      return this._putDocument(doc, undefined, undefined);\n    } else if (isMetaDocument(doc)) {\n      return this._putDocument(doc, undefined, undefined);\n    }\n\n    const jsonApiDoc = doc.content as SingleResourceDocument | CollectionResourceDocument;\n    const included = jsonApiDoc.included;\n    let i: number, length: number;\n    const { identifierCache } = this._capabilities;\n\n    if (DEBUG) {\n      validateDocumentFields(this._capabilities.schema, jsonApiDoc);\n    }\n\n    if (LOG_CACHE) {\n      const Counts = new Map();\n      let totalCount = 0;\n      if (included) {\n        for (i = 0, length = included.length; i < length; i++) {\n          const type = included[i].type;\n          Counts.set(type, (Counts.get(type) || 0) + 1);\n          totalCount++;\n        }\n      }\n      if (Array.isArray(jsonApiDoc.data)) {\n        for (i = 0, length = jsonApiDoc.data.length; i < length; i++) {\n          const type = jsonApiDoc.data[i].type;\n          Counts.set(type, (Counts.get(type) || 0) + 1);\n          totalCount++;\n        }\n      } else if (jsonApiDoc.data) {\n        const type = jsonApiDoc.data.type;\n        Counts.set(type, (Counts.get(type) || 0) + 1);\n        totalCount++;\n      }\n\n      logGroup(\n        'cache',\n        'put',\n        '<@document>',\n        doc.content?.lid || doc.request?.url || 'unknown-request',\n        `(${totalCount}) records`,\n        ''\n      );\n      let str = `\\tContent Counts:`;\n      Counts.forEach((count, type) => {\n        str += `\\n\\t\\t${type}: ${count} record${count > 1 ? 's' : ''}`;\n      });\n      if (Counts.size === 0) {\n        str += `\\t(empty)`;\n      }\n      // eslint-disable-next-line no-console\n      console.log(str);\n      // eslint-disable-next-line no-console\n      console.log({\n        lid: doc.content?.lid,\n        content: structuredClone(doc.content),\n        // we may need a specialized copy here\n        request: doc.request, // structuredClone(doc.request),\n        response: doc.response, // structuredClone(doc.response),\n      });\n      // eslint-disable-next-line no-console\n      console.groupEnd();\n    }\n\n    if (included) {\n      for (i = 0, length = included.length; i < length; i++) {\n        included[i] = putOne(this, identifierCache, included[i]);\n      }\n    }\n\n    if (Array.isArray(jsonApiDoc.data)) {\n      length = jsonApiDoc.data.length;\n      const identifiers: StableExistingRecordIdentifier[] = [];\n\n      for (i = 0; i < length; i++) {\n        identifiers.push(putOne(this, identifierCache, jsonApiDoc.data[i]));\n      }\n      return this._putDocument(\n        doc as StructuredDataDocument<CollectionResourceDocument>,\n        identifiers,\n        included as StableExistingRecordIdentifier[]\n      );\n    }\n\n    if (jsonApiDoc.data === null) {\n      return this._putDocument(\n        doc as StructuredDataDocument<SingleResourceDocument>,\n        null,\n        included as StableExistingRecordIdentifier[]\n      );\n    }\n\n    const identifier = putOne(this, identifierCache, jsonApiDoc.data);\n    return this._putDocument(\n      doc as StructuredDataDocument<SingleResourceDocument>,\n      identifier,\n      included as StableExistingRecordIdentifier[]\n    );\n  }\n\n  _putDocument<T extends ResourceErrorDocument>(\n    doc: StructuredErrorDocument<T>,\n    data: undefined,\n    included: undefined\n  ): ResourceErrorDocument;\n  _putDocument<T extends ResourceMetaDocument>(\n    doc: StructuredDataDocument<T>,\n    data: undefined,\n    included: undefined\n  ): ResourceMetaDocument;\n  _putDocument<T extends SingleResourceDocument>(\n    doc: StructuredDataDocument<T>,\n    data: StableExistingRecordIdentifier | null,\n    included: StableExistingRecordIdentifier[] | undefined\n  ): SingleResourceDataDocument;\n  _putDocument<T extends CollectionResourceDocument>(\n    doc: StructuredDataDocument<T>,\n    data: StableExistingRecordIdentifier[],\n    included: StableExistingRecordIdentifier[] | undefined\n  ): CollectionResourceDataDocument;\n  _putDocument<T extends ResourceDocument>(\n    doc: StructuredDocument<T>,\n    data: StableExistingRecordIdentifier[] | StableExistingRecordIdentifier | null | undefined,\n    included: StableExistingRecordIdentifier[] | undefined\n  ): SingleResourceDataDocument | CollectionResourceDataDocument | ResourceErrorDocument | ResourceMetaDocument {\n    // @ts-expect-error narrowing within is just horrible  in TS :/\n    const resourceDocument: SingleResourceDataDocument | CollectionResourceDataDocument | ResourceErrorDocument =\n      isErrorDocument(doc) ? fromStructuredError(doc) : fromBaseDocument(doc);\n\n    if (data !== undefined) {\n      (resourceDocument as ResourceDataDocument).data = data;\n    }\n\n    if (included !== undefined) {\n      assert(`There should not be included data on an Error document`, !isErrorDocument(doc));\n      assert(`There should not be included data on a Meta document`, !isMetaDocument(doc));\n      (resourceDocument as ResourceDataDocument).included = included;\n    }\n\n    const request = doc.request as ImmutableRequestInfo | undefined;\n    const identifier = request ? this._capabilities.identifierCache.getOrCreateDocumentIdentifier(request) : null;\n\n    if (identifier) {\n      resourceDocument.lid = identifier.lid;\n\n      // @ts-expect-error\n      doc.content = resourceDocument;\n      const hasExisting = this.__documents.has(identifier.lid);\n      this.__documents.set(identifier.lid, doc as StructuredDocument<ResourceDocument>);\n\n      this._capabilities.notifyChange(identifier, hasExisting ? 'updated' : 'added', null);\n    }\n\n    if (doc.request?.op === 'findHasMany') {\n      const parentIdentifier = doc.request.options?.identifier as StableRecordIdentifier | undefined;\n      const parentField = doc.request.options?.field as LegacyHasManyField | undefined;\n      assert(`Expected a hasMany field`, parentField?.kind === 'hasMany');\n      assert(\n        `Expected a parent identifier for a findHasMany request`,\n        parentIdentifier && isStableIdentifier(parentIdentifier)\n      );\n      if (parentField && parentIdentifier) {\n        this.__graph.push({\n          op: 'updateRelationship',\n          record: parentIdentifier,\n          field: parentField.name,\n          value: resourceDocument,\n        });\n      }\n    }\n\n    return resourceDocument;\n  }\n\n  /**\n   * Update the \"remote\" or \"canonical\" (persisted) state of the Cache\n   * by merging new information into the existing state.\n   *\n   * @method patch\n   * @public\n   * @param {Operation|Operation[]} op the operation or list of operations to perform\n   * @return {void}\n   */\n  patch(op: Operation | Operation[]): void {\n    if (Array.isArray(op)) {\n      if (LOG_CACHE) {\n        logGroup('cache', 'patch', '<BATCH>', String(op.length) + ' operations', '', '');\n      }\n\n      upgradeCapabilities(this._capabilities);\n      this._capabilities._store._join(() => {\n        for (const operation of op) {\n          patchCache(this, operation);\n        }\n      });\n\n      if (LOG_CACHE) {\n        // eslint-disable-next-line no-console\n        console.groupEnd();\n      }\n    } else {\n      patchCache(this, op);\n    }\n  }\n\n  /**\n   * Update the \"local\" or \"current\" (unpersisted) state of the Cache\n   *\n   * @method mutate\n   * @param {Mutation} mutation\n   * @return {void}\n   * @public\n   */\n  mutate(mutation: LocalRelationshipOperation): void {\n    if (LOG_CACHE) {\n      logGroup('cache', 'mutate', mutation.record.type, mutation.record.lid, mutation.field, mutation.op);\n      try {\n        const _data = JSON.parse(JSON.stringify(mutation)) as object;\n        // eslint-disable-next-line no-console\n        console.log(_data);\n      } catch {\n        // eslint-disable-next-line no-console\n        console.log(mutation);\n      }\n    }\n    this.__graph.update(mutation, false);\n\n    if (LOG_CACHE) {\n      // eslint-disable-next-line no-console\n      console.groupEnd();\n    }\n  }\n\n  /**\n   * Peek resource data from the Cache.\n   *\n   * In development, if the return value\n   * is JSON the return value\n   * will be deep-cloned and deep-frozen\n   * to prevent mutation thereby enforcing cache\n   * Immutability.\n   *\n   * This form of peek is useful for implementations\n   * that want to feed raw-data from cache to the UI\n   * or which want to interact with a blob of data\n   * directly from the presentation cache.\n   *\n   * An implementation might want to do this because\n   * de-referencing records which read from their own\n   * blob is generally safer because the record does\n   * not require retainining connections to the Store\n   * and Cache to present data on a per-field basis.\n   *\n   * This generally takes the place of `getAttr` as\n   * an API and may even take the place of `getRelationship`\n   * depending on implementation specifics, though this\n   * latter usage is less recommended due to the advantages\n   * of the Graph handling necessary entanglements and\n   * notifications for relational data.\n   *\n   * @method peek\n   * @public\n   * @param {StableRecordIdentifier | StableDocumentIdentifier} identifier\n   * @return {ResourceDocument | ResourceObject | null} the known resource data\n   */\n  peek(identifier: StableRecordIdentifier): ResourceObject | null;\n  peek(identifier: StableDocumentIdentifier): ResourceDocument | null;\n  peek(identifier: StableDocumentIdentifier | StableRecordIdentifier): ResourceObject | ResourceDocument | null {\n    if ('type' in identifier) {\n      const peeked = this.__safePeek(identifier, false);\n\n      if (!peeked) {\n        return null;\n      }\n\n      const { type, id, lid } = identifier;\n      const attributes = Object.assign({}, peeked.remoteAttrs, peeked.inflightAttrs, peeked.localAttrs) as ObjectValue;\n      const relationships: ResourceObject['relationships'] = {};\n\n      const rels = this.__graph.identifiers.get(identifier);\n      if (rels) {\n        Object.keys(rels).forEach((key) => {\n          const rel = rels[key];\n          if (rel.definition.isImplicit) {\n            return;\n          } else {\n            relationships[key] = this.__graph.getData(identifier, key);\n          }\n        });\n      }\n\n      upgradeCapabilities(this._capabilities);\n      const store = this._capabilities._store;\n      const attrs = this._capabilities.schema.fields(identifier);\n      attrs.forEach((attr, key) => {\n        if (attr.kind === 'alias') {\n          return;\n        }\n        if (key in attributes && attributes[key] !== undefined) {\n          return;\n        }\n        const defaultValue = getDefaultValue(attr, identifier, store);\n\n        if (defaultValue !== undefined) {\n          attributes[key] = defaultValue;\n        }\n      });\n\n      return {\n        type,\n        id,\n        lid,\n        attributes,\n        relationships,\n      };\n    }\n\n    const document = this.peekRequest(identifier);\n\n    if (document) {\n      if ('content' in document) return document.content!;\n    }\n    return null;\n  }\n\n  peekRemoteState(identifier: StableRecordIdentifier): ResourceObject | null;\n  peekRemoteState(identifier: StableDocumentIdentifier): ResourceDocument | null;\n  peekRemoteState(\n    identifier: StableDocumentIdentifier | StableRecordIdentifier\n  ): ResourceObject | ResourceDocument | null {\n    if ('type' in identifier) {\n      const peeked = this.__safePeek(identifier, false);\n\n      if (!peeked) {\n        return null;\n      }\n\n      const { type, id, lid } = identifier;\n      const attributes = Object.assign({}, peeked.remoteAttrs) as ObjectValue;\n      const relationships: ResourceObject['relationships'] = {};\n\n      const rels = this.__graph.identifiers.get(identifier);\n      if (rels) {\n        Object.keys(rels).forEach((key) => {\n          const rel = rels[key];\n          if (rel.definition.isImplicit) {\n            return;\n          } else {\n            relationships[key] = this.__graph.getData(identifier, key);\n          }\n        });\n      }\n\n      upgradeCapabilities(this._capabilities);\n      const store = this._capabilities._store;\n      const attrs = this._capabilities.schema.fields(identifier);\n      attrs.forEach((attr, key) => {\n        if (key in attributes && attributes[key] !== undefined) {\n          return;\n        }\n        const defaultValue = getDefaultValue(attr, identifier, store);\n\n        if (defaultValue !== undefined) {\n          attributes[key] = defaultValue;\n        }\n      });\n\n      return {\n        type,\n        id,\n        lid,\n        attributes,\n        relationships,\n      };\n    }\n\n    const document = this.peekRequest(identifier);\n\n    if (document) {\n      if ('content' in document) return document.content!;\n    }\n    return null;\n  }\n  /**\n   * Peek the Cache for the existing request data associated with\n   * a cacheable request.\n   *\n   * This is effectively the reverse of `put` for a request in\n   * that it will return the the request, response, and content\n   * whereas `peek` will return just the `content`.\n   *\n   * @method peekRequest\n   * @param {StableDocumentIdentifier}\n   * @return {StructuredDocument<ResourceDocument> | null}\n   * @public\n   */\n  peekRequest(identifier: StableDocumentIdentifier): StructuredDocument<ResourceDocument> | null {\n    return this.__documents.get(identifier.lid) || null;\n  }\n\n  /**\n   * Push resource data from a remote source into the cache for this identifier\n   *\n   * @method upsert\n   * @public\n   * @param identifier\n   * @param data\n   * @param hasRecord\n   * @return {void | string[]} if `hasRecord` is true then calculated key changes should be returned\n   */\n  upsert(\n    identifier: StableRecordIdentifier,\n    data: ExistingResourceObject,\n    calculateChanges?: boolean\n  ): void | string[] {\n    upgradeCapabilities(this._capabilities);\n    const store = this._capabilities._store;\n    if (!store._cbs) {\n      let result: void | string[] = undefined;\n      store._run(() => {\n        result = cacheUpsert(this, identifier, data, calculateChanges);\n      });\n      return result;\n    }\n\n    return cacheUpsert(this, identifier, data, calculateChanges);\n  }\n\n  // Cache Forking Support\n  // =====================\n\n  /**\n   * Create a fork of the cache from the current state.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to fork at the Store level, which will\n   * utilize this method to fork the cache.\n   *\n   * @method fork\n   * @internal\n   * @return Promise<Cache>\n   */\n  fork(): Promise<Cache> {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * Merge a fork back into a parent Cache.\n   *\n   * Applications should typically not call this method themselves,\n   * preferring instead to merge at the Store level, which will\n   * utilize this method to merge the caches.\n   *\n   * @method merge\n   * @param {Cache} cache\n   * @public\n   * @return Promise<void>\n   */\n  merge(cache: Cache): Promise<void> {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * Generate the list of changes applied to all\n   * record in the store.\n   *\n   * Each individual resource or document that has\n   * been mutated should be described as an individual\n   * `Change` entry in the returned array.\n   *\n   * A `Change` is described by an object containing up to\n   * three properties: (1) the `identifier` of the entity that\n   * changed; (2) the `op` code of that change being one of\n   * `upsert` or `remove`, and if the op is `upsert` a `patch`\n   * containing the data to merge into the cache for the given\n   * entity.\n   *\n   * This `patch` is opaque to the Store but should be understood\n   * by the Cache and may expect to be utilized by an Adapter\n   * when generating data during a `save` operation.\n   *\n   * It is generally recommended that the `patch` contain only\n   * the updated state, ignoring fields that are unchanged\n   *\n   * ```ts\n   * interface Change {\n   *  identifier: StableRecordIdentifier | StableDocumentIdentifier;\n   *  op: 'upsert' | 'remove';\n   *  patch?: unknown;\n   * }\n   * ```\n   *\n   * @method diff\n   * @public\n   */\n  diff(): Promise<Change[]> {\n    throw new Error(`Not Implemented`);\n  }\n\n  // SSR Support\n  // ===========\n\n  /**\n   * Serialize the entire contents of the Cache into a Stream\n   * which may be fed back into a new instance of the same Cache\n   * via `cache.hydrate`.\n   *\n   * @method dump\n   * @return {Promise<ReadableStream>}\n   * @public\n   */\n  dump(): Promise<ReadableStream<unknown>> {\n    throw new Error(`Not Implemented`);\n  }\n\n  /**\n   * hydrate a Cache from a Stream with content previously serialized\n   * from another instance of the same Cache, resolving when hydration\n   * is complete.\n   *\n   * This method should expect to be called both in the context of restoring\n   * the Cache during application rehydration after SSR **AND** at unknown\n   * times during the lifetime of an already booted application when it is\n   * desired to bulk-load additional information into the cache. This latter\n   * behavior supports optimizing pre/fetching of data for route transitions\n   * via data-only SSR modes.\n   *\n   * @method hydrate\n   * @param {ReadableStream} stream\n   * @return {Promise<void>}\n   * @public\n   */\n  hydrate(stream: ReadableStream<unknown>): Promise<void> {\n    throw new Error('Not Implemented');\n  }\n\n  // Resource Support\n  // ================\n\n  /**\n   * [LIFECYCLE] Signal to the cache that a new record has been instantiated on the client\n   *\n   * It returns properties from options that should be set on the record during the create\n   * process. This return value behavior is deprecated.\n   *\n   * @method clientDidCreate\n   * @public\n   * @param identifier\n   * @param createArgs\n   */\n  clientDidCreate(identifier: StableRecordIdentifier, options?: Record<string, Value>): Record<string, unknown> {\n    if (LOG_CACHE) {\n      try {\n        const _data = options ? (JSON.parse(JSON.stringify(options)) as object) : options;\n        // eslint-disable-next-line no-console\n        console.log(`EmberData | Mutation - clientDidCreate ${identifier.lid}`, _data);\n      } catch {\n        // eslint-disable-next-line no-console\n        console.log(`EmberData | Mutation - clientDidCreate ${identifier.lid}`, options);\n      }\n    }\n    const cached = this._createCache(identifier);\n    cached.isNew = true;\n    const createOptions: Record<string, unknown> = {};\n\n    if (options !== undefined) {\n      const storeWrapper = this._capabilities;\n      const fields = storeWrapper.schema.fields(identifier);\n      const graph = this.__graph;\n      const propertyNames = Object.keys(options);\n\n      for (let i = 0; i < propertyNames.length; i++) {\n        const name = propertyNames[i];\n        const propertyValue = options[name];\n\n        if (name === 'id') {\n          continue;\n        }\n\n        const fieldType: FieldSchema | undefined = fields.get(name);\n        const kind = fieldType !== undefined ? ('kind' in fieldType ? fieldType.kind : 'attribute') : null;\n        let relationship: ResourceEdge | CollectionEdge;\n\n        switch (kind) {\n          case 'attribute':\n            this.setAttr(identifier, name, propertyValue);\n            createOptions[name] = propertyValue;\n            break;\n          case 'belongsTo':\n            this.mutate({\n              op: 'replaceRelatedRecord',\n              field: name,\n              record: identifier,\n              value: propertyValue as StableRecordIdentifier | null,\n            });\n            relationship = graph.get(identifier, name) as ResourceEdge;\n            relationship.state.hasReceivedData = true;\n            relationship.state.isEmpty = false;\n            break;\n          case 'hasMany':\n            this.mutate({\n              op: 'replaceRelatedRecords',\n              field: name,\n              record: identifier,\n              value: propertyValue as unknown as StableRecordIdentifier[],\n            });\n            relationship = graph.get(identifier, name) as CollectionEdge;\n            relationship.state.hasReceivedData = true;\n            relationship.state.isEmpty = false;\n            break;\n          default:\n            // reflect back (pass-thru) unknown properties\n            createOptions[name] = propertyValue;\n        }\n      }\n    }\n\n    this._capabilities.notifyChange(identifier, 'added', null);\n\n    return createOptions;\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * will be part of a save transaction.\n   *\n   * @method willCommit\n   * @public\n   * @param identifier\n   */\n  willCommit(identifier: StableRecordIdentifier): void {\n    const cached = this.__peek(identifier, false);\n\n    /*\n      if we have multiple saves in flight at once then\n      we have information loss no matter what. This\n      attempts to lose the least information.\n\n      If we were to clear inflightAttrs, previous requests\n      would not be able to use it during their didCommit.\n\n      If we upsert inflightattrs, previous requests incorrectly\n      see more recent inflight changes as part of their own and\n      will incorrectly mark the new state as the correct remote state.\n\n      We choose this latter behavior to avoid accidentally removing\n      earlier changes.\n\n      If apps do not want this behavior they can either\n      - chain save requests serially vs allowing concurrent saves\n      - move to using a request handler that caches the inflight state\n        on a per-request basis\n      - change their save requests to only send a \"PATCH\" instead of a \"PUT\"\n        so that only latest changes are involved in each request, and then also\n        ensure that the API or their handler reflects only those changes back\n        for upsert into the cache.\n    */\n    if (cached.inflightAttrs) {\n      if (cached.localAttrs) {\n        Object.assign(cached.inflightAttrs, cached.localAttrs);\n      }\n    } else {\n      cached.inflightAttrs = cached.localAttrs;\n    }\n    cached.localAttrs = null;\n\n    if (DEBUG) {\n      if (!DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE) {\n        // save off info about saved relationships\n        const fields = this._capabilities.schema.fields(identifier);\n        fields.forEach((schema, name) => {\n          if (schema.kind === 'belongsTo') {\n            if (this.__graph._isDirty(identifier, name)) {\n              const relationshipData = this.__graph.getData(identifier, name);\n              const inFlight = (cached.inflightRelationships =\n                cached.inflightRelationships || (Object.create(null) as Record<string, unknown>));\n              inFlight[name] = relationshipData;\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was successfully updated as part of a save transaction.\n   *\n   * @method didCommit\n   * @public\n   * @param identifier\n   * @param data\n   */\n  didCommit(\n    committedIdentifier: StableRecordIdentifier,\n    result: StructuredDataDocument<SingleResourceDocument>\n  ): SingleResourceDataDocument {\n    const payload = result.content;\n    const operation = result.request.op;\n    const data = payload && payload.data;\n\n    if (LOG_CACHE) {\n      try {\n        const payloadCopy: unknown = payload ? JSON.parse(JSON.stringify(payload)) : payload;\n        // eslint-disable-next-line no-console\n        console.log(`EmberData | Payload - ${operation}`, payloadCopy);\n      } catch {\n        // eslint-disable-next-line no-console\n        console.log(`EmberData | Payload - ${operation}`, payload);\n      }\n    }\n\n    if (!data) {\n      assert(\n        `Your ${committedIdentifier.type} record was saved to the server, but the response does not have an id and no id has been set client side. Records must have ids. Please update the server response to provide an id in the response or generate the id on the client side either before saving the record or while normalizing the response.`,\n        committedIdentifier.id\n      );\n    }\n\n    const { identifierCache } = this._capabilities;\n    const existingId = committedIdentifier.id;\n    const identifier: StableRecordIdentifier =\n      operation !== 'deleteRecord' && data\n        ? identifierCache.updateRecordIdentifier(committedIdentifier, data)\n        : committedIdentifier;\n\n    const cached = this.__peek(identifier, false);\n    if (cached.isDeleted) {\n      this.__graph.push({\n        op: 'deleteRecord',\n        record: identifier,\n        isNew: false,\n      });\n      cached.isDeletionCommitted = true;\n      this._capabilities.notifyChange(identifier, 'removed', null);\n      // TODO @runspired should we early exit here?\n    }\n\n    if (DEBUG) {\n      if (cached.isNew && !identifier.id && (typeof data?.id !== 'string' || data.id.length > 0)) {\n        const error = new Error(`Expected an id ${String(identifier)} in response ${JSON.stringify(data)}`);\n        //@ts-expect-error\n        error.isAdapterError = true;\n        //@ts-expect-error\n        error.code = 'InvalidError';\n        throw error;\n      }\n    }\n\n    const fields = this._capabilities.schema.fields(identifier);\n    cached.isNew = false;\n    let newCanonicalAttributes: ExistingResourceObject['attributes'];\n    if (data) {\n      if (data.id && !cached.id) {\n        cached.id = data.id;\n      }\n      if (identifier === committedIdentifier && identifier.id !== existingId) {\n        this._capabilities.notifyChange(identifier, 'identity', null);\n      }\n\n      assert(\n        `Expected the ID received for the primary '${identifier.type}' resource being saved to match the current id '${cached.id}' but received '${identifier.id}'.`,\n        identifier.id === cached.id\n      );\n\n      if (data.relationships) {\n        if (DEBUG) {\n          if (!DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE) {\n            // assert against bad API behavior where a belongsTo relationship\n            // is saved but the return payload indicates a different final state.\n            fields.forEach((field, name) => {\n              if (field.kind === 'belongsTo') {\n                const relationshipData = data.relationships![name]?.data;\n                if (relationshipData !== undefined) {\n                  const inFlightData = cached.inflightRelationships?.[name] as SingleResourceRelationship;\n                  if (!inFlightData || !('data' in inFlightData)) {\n                    return;\n                  }\n                  const actualData = relationshipData\n                    ? this._capabilities.identifierCache.getOrCreateRecordIdentifier(relationshipData)\n                    : null;\n                  assert(\n                    `Expected the resource relationship '<${identifier.type}>.${name}' on ${\n                      identifier.lid\n                    } to be saved as ${inFlightData.data ? inFlightData.data.lid : '<null>'} but it was saved as ${\n                      actualData ? actualData.lid : '<null>'\n                    }`,\n                    inFlightData.data === actualData\n                  );\n                }\n              }\n            });\n            cached.inflightRelationships = null;\n          }\n        }\n        setupRelationships(this.__graph, fields, identifier, data);\n      }\n      newCanonicalAttributes = data.attributes;\n    }\n    const changedKeys = newCanonicalAttributes && calculateChangedKeys(cached, newCanonicalAttributes, fields);\n\n    cached.remoteAttrs = Object.assign(\n      cached.remoteAttrs || (Object.create(null) as Record<string, unknown>),\n      cached.inflightAttrs,\n      newCanonicalAttributes\n    );\n    cached.inflightAttrs = null;\n    patchLocalAttributes(cached, changedKeys);\n\n    if (cached.errors) {\n      cached.errors = null;\n      this._capabilities.notifyChange(identifier, 'errors', null);\n    }\n\n    if (changedKeys?.size) notifyAttributes(this._capabilities, identifier, changedKeys);\n    this._capabilities.notifyChange(identifier, 'state', null);\n\n    const included = payload && payload.included;\n    if (included) {\n      for (let i = 0, length = included.length; i < length; i++) {\n        putOne(this, identifierCache, included[i]);\n      }\n    }\n\n    return {\n      data: identifier as StableExistingRecordIdentifier,\n    };\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that a resource\n   * was update via a save transaction failed.\n   *\n   * @method commitWasRejected\n   * @public\n   * @param identifier\n   * @param errors\n   */\n  commitWasRejected(identifier: StableRecordIdentifier, errors?: ApiError[]): void {\n    const cached = this.__peek(identifier, false);\n    if (cached.inflightAttrs) {\n      const keys = Object.keys(cached.inflightAttrs);\n      if (keys.length > 0) {\n        const attrs = (cached.localAttrs =\n          cached.localAttrs || (Object.create(null) as Record<string, Value | undefined>));\n        for (let i = 0; i < keys.length; i++) {\n          if (attrs[keys[i]] === undefined) {\n            attrs[keys[i]] = cached.inflightAttrs[keys[i]];\n          }\n        }\n      }\n      cached.inflightAttrs = null;\n    }\n    if (errors) {\n      cached.errors = errors;\n    }\n    this._capabilities.notifyChange(identifier, 'errors', null);\n  }\n\n  /**\n   * [LIFECYCLE] Signals to the cache that all data for a resource\n   * should be cleared.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method unloadRecord\n   * @public\n   * @param identifier\n   */\n  unloadRecord(identifier: StableRecordIdentifier): void {\n    const storeWrapper = this._capabilities;\n    // TODO this is necessary because\n    // we maintain memebership inside InstanceCache\n    // for peekAll, so even though we haven't created\n    // any data we think this exists.\n    // TODO can we eliminate that membership now?\n    if (!this.__cache.has(identifier)) {\n      // the graph may still need to unload identity\n      peekGraph(storeWrapper)?.unload(identifier);\n      return;\n    }\n    const removeFromRecordArray = !this.isDeletionCommitted(identifier);\n    let removed = false;\n    const cached = this.__peek(identifier, false);\n\n    if (cached.isNew || cached.isDeletionCommitted) {\n      peekGraph(storeWrapper)?.push({\n        op: 'deleteRecord',\n        record: identifier,\n        isNew: cached.isNew,\n      });\n    } else {\n      peekGraph(storeWrapper)?.unload(identifier);\n    }\n\n    // effectively clearing these is ensuring that\n    // we report as `isEmpty` during teardown.\n    cached.localAttrs = null;\n    cached.remoteAttrs = null;\n    cached.defaultAttrs = null;\n    cached.inflightAttrs = null;\n\n    const relatedIdentifiers = _allRelatedIdentifiers(storeWrapper, identifier);\n    if (areAllModelsUnloaded(storeWrapper, relatedIdentifiers)) {\n      for (let i = 0; i < relatedIdentifiers.length; ++i) {\n        const relatedIdentifier = relatedIdentifiers[i];\n        storeWrapper.notifyChange(relatedIdentifier, 'removed', null);\n        removed = true;\n        storeWrapper.disconnectRecord(relatedIdentifier);\n      }\n    }\n\n    this.__cache.delete(identifier);\n    this.__destroyedCache.set(identifier, cached);\n\n    /*\n     * The destroy cache is a hack to prevent applications\n     * from blowing up during teardown. Accessing state\n     * on a destroyed record is not safe, but historically\n     * was possible due to a combination of teardown timing\n     * and retention of cached state directly on the\n     * record itself.\n     *\n     * Once we have deprecated accessing state on a destroyed\n     * instance we may remove this. The timing isn't a huge deal\n     * as momentarily retaining the objects outside the bounds\n     * of a test won't cause issues.\n     */\n    if (this.__destroyedCache.size === 1) {\n      // TODO do we still need this?\n      setTimeout(() => {\n        this.__destroyedCache.clear();\n      }, 100);\n    }\n\n    if (!removed && removeFromRecordArray) {\n      storeWrapper.notifyChange(identifier, 'removed', null);\n    }\n  }\n\n  // Granular Resource Data APIs\n  // ===========================\n\n  /**\n   * Retrieve the data for an attribute from the cache\n   *\n   * @method getAttr\n   * @public\n   * @param identifier\n   * @param field\n   * @return {unknown}\n   */\n  getAttr(identifier: StableRecordIdentifier, attr: string | string[]): Value | undefined {\n    const isSimplePath = !Array.isArray(attr) || attr.length === 1;\n    if (Array.isArray(attr) && attr.length === 1) {\n      attr = attr[0];\n    }\n\n    if (isSimplePath) {\n      const attribute = attr as string;\n      const cached = this.__peek(identifier, true);\n      assert(\n        `Cannot retrieve attributes for identifier ${String(identifier)} as it is not present in the cache`,\n        cached\n      );\n\n      // in Prod we try to recover when accessing something that\n      // doesn't exist\n      if (!cached) {\n        return undefined;\n      }\n\n      if (cached.localAttrs && attribute in cached.localAttrs) {\n        return cached.localAttrs[attribute];\n      } else if (cached.inflightAttrs && attribute in cached.inflightAttrs) {\n        return cached.inflightAttrs[attribute];\n      } else if (cached.remoteAttrs && attribute in cached.remoteAttrs) {\n        return cached.remoteAttrs[attribute];\n      } else if (cached.defaultAttrs && attribute in cached.defaultAttrs) {\n        return cached.defaultAttrs[attribute];\n      } else {\n        const attrSchema = this._capabilities.schema.fields(identifier).get(attribute);\n\n        upgradeCapabilities(this._capabilities);\n        const defaultValue = getDefaultValue(attrSchema, identifier, this._capabilities._store);\n        if (schemaHasLegacyDefaultValueFn(attrSchema)) {\n          cached.defaultAttrs = cached.defaultAttrs || (Object.create(null) as Record<string, Value>);\n          cached.defaultAttrs[attribute] = defaultValue;\n        }\n        return defaultValue;\n      }\n    }\n\n    // TODO @runspired consider whether we need a defaultValue cache in SchemaRecord\n    // like we do for the simple case above.\n    const path: string[] = attr as string[];\n    const cached = this.__peek(identifier, true);\n    const basePath = path[0];\n    let current = cached.localAttrs && basePath in cached.localAttrs ? cached.localAttrs[basePath] : undefined;\n    if (current === undefined) {\n      current = cached.inflightAttrs && basePath in cached.inflightAttrs ? cached.inflightAttrs[basePath] : undefined;\n    }\n    if (current === undefined) {\n      current = cached.remoteAttrs && basePath in cached.remoteAttrs ? cached.remoteAttrs[basePath] : undefined;\n    }\n    if (current === undefined) {\n      return undefined;\n    }\n    for (let i = 1; i < path.length; i++) {\n      current = (current as ObjectValue)[path[i]];\n      if (current === undefined) {\n        return undefined;\n      }\n    }\n    return current;\n  }\n\n  getRemoteAttr(identifier: StableRecordIdentifier, attr: string | string[]): Value | undefined {\n    const isSimplePath = !Array.isArray(attr) || attr.length === 1;\n    if (Array.isArray(attr) && attr.length === 1) {\n      attr = attr[0];\n    }\n\n    if (isSimplePath) {\n      const attribute = attr as string;\n      const cached = this.__peek(identifier, true);\n      assert(\n        `Cannot retrieve remote attributes for identifier ${String(identifier)} as it is not present in the cache`,\n        cached\n      );\n\n      // in Prod we try to recover when accessing something that\n      // doesn't exist\n      if (!cached) {\n        return undefined;\n      }\n\n      if (cached.remoteAttrs && attribute in cached.remoteAttrs) {\n        return cached.remoteAttrs[attribute];\n\n        // we still show defaultValues in the case of a remoteAttr access\n      } else if (cached.defaultAttrs && attribute in cached.defaultAttrs) {\n        return cached.defaultAttrs[attribute];\n      } else {\n        const attrSchema = this._capabilities.schema.fields(identifier).get(attribute);\n\n        upgradeCapabilities(this._capabilities);\n        const defaultValue = getDefaultValue(attrSchema, identifier, this._capabilities._store);\n        if (schemaHasLegacyDefaultValueFn(attrSchema)) {\n          cached.defaultAttrs = cached.defaultAttrs || (Object.create(null) as Record<string, Value>);\n          cached.defaultAttrs[attribute] = defaultValue;\n        }\n        return defaultValue;\n      }\n    }\n\n    // TODO @runspired consider whether we need a defaultValue cache in SchemaRecord\n    // like we do for the simple case above.\n    const path: string[] = attr as string[];\n    const cached = this.__peek(identifier, true);\n    const basePath = path[0];\n    let current = cached.remoteAttrs && basePath in cached.remoteAttrs ? cached.remoteAttrs[basePath] : undefined;\n\n    if (current === undefined) {\n      return undefined;\n    }\n\n    for (let i = 1; i < path.length; i++) {\n      current = (current as ObjectValue)[path[i]];\n      if (current === undefined) {\n        return undefined;\n      }\n    }\n    return current;\n  }\n\n  /**\n   * Mutate the data for an attribute in the cache\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method setAttr\n   * @public\n   * @param identifier\n   * @param field\n   * @param value\n   */\n  setAttr(identifier: StableRecordIdentifier, attr: string | string[], value: Value): void {\n    // this assert works to ensure we have a non-empty string and/or a non-empty array\n    assert('setAttr must receive at least one attribute path', attr.length > 0);\n    const isSimplePath = !Array.isArray(attr) || attr.length === 1;\n\n    if (Array.isArray(attr) && attr.length === 1) {\n      attr = attr[0];\n    }\n\n    if (isSimplePath) {\n      const cached = this.__peek(identifier, false);\n      const currentAttr = attr as string;\n      const existing =\n        cached.inflightAttrs && currentAttr in cached.inflightAttrs\n          ? cached.inflightAttrs[currentAttr]\n          : cached.remoteAttrs && currentAttr in cached.remoteAttrs\n            ? cached.remoteAttrs[currentAttr]\n            : undefined;\n\n      if (existing !== value) {\n        cached.localAttrs = cached.localAttrs || (Object.create(null) as Record<string, Value>);\n        cached.localAttrs[currentAttr] = value;\n        cached.changes = cached.changes || (Object.create(null) as Record<string, [Value, Value]>);\n        cached.changes[currentAttr] = [existing, value];\n      } else if (cached.localAttrs) {\n        delete cached.localAttrs[currentAttr];\n        delete cached.changes![currentAttr];\n      }\n\n      if (cached.defaultAttrs && currentAttr in cached.defaultAttrs) {\n        delete cached.defaultAttrs[currentAttr];\n      }\n\n      this._capabilities.notifyChange(identifier, 'attributes', currentAttr);\n      return;\n    }\n\n    // get current value from local else inflight else remote\n    // structuredClone current if not local (or always?)\n    // traverse path, update value at path\n    // notify change at first link in path.\n    // second pass optimization is change notifyChange signature to take an array path\n\n    // guaranteed that we have path of at least 2 in length\n    const path: string[] = attr as string[];\n\n    const cached = this.__peek(identifier, false);\n\n    // get existing cache record for base path\n    const basePath = path[0];\n    const existing =\n      cached.inflightAttrs && basePath in cached.inflightAttrs\n        ? cached.inflightAttrs[basePath]\n        : cached.remoteAttrs && basePath in cached.remoteAttrs\n          ? cached.remoteAttrs[basePath]\n          : undefined;\n\n    let existingAttr;\n    if (existing) {\n      existingAttr = (existing as ObjectValue)[path[1]];\n\n      for (let i = 2; i < path.length; i++) {\n        // the specific change we're making is at path[length - 1]\n        existingAttr = (existingAttr as ObjectValue)[path[i]];\n      }\n    }\n\n    if (existingAttr !== value) {\n      cached.localAttrs = cached.localAttrs || (Object.create(null) as Record<string, Value>);\n      cached.localAttrs[basePath] = cached.localAttrs[basePath] || structuredClone(existing);\n      cached.changes = cached.changes || (Object.create(null) as Record<string, [Value, Value]>);\n      let currentLocal = cached.localAttrs[basePath] as ObjectValue;\n      let nextLink = 1;\n\n      while (nextLink < path.length - 1) {\n        currentLocal = currentLocal[path[nextLink++]] as ObjectValue;\n      }\n      currentLocal[path[nextLink]] = value as ObjectValue;\n\n      cached.changes[basePath] = [existing, cached.localAttrs[basePath] as ObjectValue];\n\n      // since we initiaize the value as basePath as a clone of the value at the remote basePath\n      // then in theory we can use JSON.stringify to compare the two values as key insertion order\n      // ought to be consistent.\n      // we try/catch this because users have a habit of doing \"Bad Things\"TM wherein the cache contains\n      // stateful values that are not JSON serializable correctly such as Dates.\n      // in the case that we error, we fallback to not removing the local value\n      // so that any changes we don't understand are preserved. Thse objects would then sometimes\n      // appear to be dirty unnecessarily, and for folks that open an issue we can guide them\n      // to make their cache data less stateful.\n    } else if (cached.localAttrs) {\n      try {\n        if (!existing) {\n          return;\n        }\n        const existingStr = JSON.stringify(existing);\n        const newStr = JSON.stringify(cached.localAttrs[basePath]);\n\n        if (existingStr !== newStr) {\n          delete cached.localAttrs[basePath];\n          delete cached.changes![basePath];\n        }\n      } catch {\n        // noop\n      }\n    }\n\n    this._capabilities.notifyChange(identifier, 'attributes', basePath);\n  }\n\n  /**\n   * Query the cache for the changed attributes of a resource.\n   *\n   * @method changedAttrs\n   * @public\n   * @param identifier\n   * @return {ChangedAttributesHash} { <field>: [<old>, <new>] }\n   */\n  changedAttrs(identifier: StableRecordIdentifier): ChangedAttributesHash {\n    const cached = this.__peek(identifier, false);\n    assert(\n      `Cannot retrieve changed attributes for identifier ${String(identifier)} as it is not present in the cache`,\n      cached\n    );\n\n    // in Prod we try to recover when accessing something that\n    // doesn't exist\n    if (!cached) {\n      return Object.create(null) as ChangedAttributesHash;\n    }\n\n    // TODO freeze in dev\n    return cached.changes || (Object.create(null) as ChangedAttributesHash);\n  }\n\n  /**\n   * Query the cache for whether any mutated attributes exist\n   *\n   * @method hasChangedAttrs\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  hasChangedAttrs(identifier: StableRecordIdentifier): boolean {\n    const cached = this.__peek(identifier, true);\n    assert(\n      `Cannot retrieve changed attributes for identifier ${String(identifier)} as it is not present in the cache`,\n      cached\n    );\n\n    // in Prod we try to recover when accessing something that\n    // doesn't exist\n    if (!cached) {\n      return false;\n    }\n\n    return (\n      (cached.inflightAttrs !== null && Object.keys(cached.inflightAttrs).length > 0) ||\n      (cached.localAttrs !== null && Object.keys(cached.localAttrs).length > 0)\n    );\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to attributes\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackAttrs\n   * @public\n   * @param identifier\n   * @return {string[]} the names of fields that were restored\n   */\n  rollbackAttrs(identifier: StableRecordIdentifier): string[] {\n    const cached = this.__peek(identifier, false);\n    let dirtyKeys: string[] | undefined;\n    cached.isDeleted = false;\n\n    if (cached.localAttrs !== null) {\n      dirtyKeys = Object.keys(cached.localAttrs);\n      cached.localAttrs = null;\n      cached.changes = null;\n    }\n\n    if (cached.isNew) {\n      // > Note: Graph removal handled by unloadRecord\n      cached.isDeletionCommitted = true;\n      cached.isDeleted = true;\n      cached.isNew = false;\n    }\n\n    cached.inflightAttrs = null;\n    cached.defaultAttrs = null;\n\n    if (cached.errors) {\n      cached.errors = null;\n      this._capabilities.notifyChange(identifier, 'errors', null);\n    }\n\n    this._capabilities.notifyChange(identifier, 'state', null);\n\n    if (dirtyKeys && dirtyKeys.length) {\n      notifyAttributes(this._capabilities, identifier, new Set(dirtyKeys));\n    }\n\n    return dirtyKeys || [];\n  }\n\n  /**\n     * Query the cache for the changes to relationships of a resource.\n     *\n     * Returns a map of relationship names to RelationshipDiff objects.\n     *\n     * ```ts\n     * type RelationshipDiff =\n    | {\n        kind: 'collection';\n        remoteState: StableRecordIdentifier[];\n        additions: Set<StableRecordIdentifier>;\n        removals: Set<StableRecordIdentifier>;\n        localState: StableRecordIdentifier[];\n        reordered: boolean;\n      }\n    | {\n        kind: 'resource';\n        remoteState: StableRecordIdentifier | null;\n        localState: StableRecordIdentifier | null;\n      };\n      ```\n     *\n     * @method changedRelationships\n     * @public\n     * @param {StableRecordIdentifier} identifier\n     * @return {Map<string, RelationshipDiff>}\n     */\n  changedRelationships(identifier: StableRecordIdentifier): Map<string, RelationshipDiff> {\n    return this.__graph.getChanged(identifier);\n  }\n\n  /**\n   * Query the cache for whether any mutated relationships exist\n   *\n   * @method hasChangedRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {boolean}\n   */\n  hasChangedRelationships(identifier: StableRecordIdentifier): boolean {\n    return this.__graph.hasChanged(identifier);\n  }\n\n  /**\n   * Tell the cache to discard any uncommitted mutations to relationships.\n   *\n   * This will also discard the change on any appropriate inverses.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method rollbackRelationships\n   * @public\n   * @param {StableRecordIdentifier} identifier\n   * @return {string[]} the names of relationships that were restored\n   */\n  rollbackRelationships(identifier: StableRecordIdentifier): string[] {\n    upgradeCapabilities(this._capabilities);\n    let result!: string[];\n    this._capabilities._store._join(() => {\n      result = this.__graph.rollback(identifier);\n    });\n    return result;\n  }\n\n  /**\n   * Query the cache for the current state of a relationship property\n   *\n   * @method getRelationship\n   * @public\n   * @param identifier\n   * @param field\n   * @return resource relationship object\n   */\n  getRelationship(identifier: StableRecordIdentifier, field: string): ResourceRelationship | CollectionRelationship {\n    return this.__graph.getData(identifier, field);\n  }\n\n  getRemoteRelationship(\n    identifier: StableRecordIdentifier,\n    field: string\n  ): ResourceRelationship | CollectionRelationship {\n    return this.__graph.getRemoteData(identifier, field);\n  }\n\n  // Resource State\n  // ===============\n\n  /**\n   * Update the cache state for the given resource to be marked\n   * as locally deleted, or remove such a mark.\n   *\n   * This method is a candidate to become a mutation\n   *\n   * @method setIsDeleted\n   * @public\n   * @param identifier\n   * @param isDeleted {boolean}\n   */\n  setIsDeleted(identifier: StableRecordIdentifier, isDeleted: boolean): void {\n    const cached = this.__peek(identifier, false);\n    cached.isDeleted = isDeleted;\n    // > Note: Graph removal for isNew handled by unloadRecord\n    this._capabilities.notifyChange(identifier, 'state', null);\n  }\n\n  /**\n   * Query the cache for any validation errors applicable to the given resource.\n   *\n   * @method getErrors\n   * @public\n   * @param identifier\n   * @return {JsonApiError[]}\n   */\n  getErrors(identifier: StableRecordIdentifier): ApiError[] {\n    return this.__peek(identifier, true).errors || [];\n  }\n\n  /**\n   * Query the cache for whether a given resource has any available data\n   *\n   * @method isEmpty\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isEmpty(identifier: StableRecordIdentifier): boolean {\n    const cached = this.__safePeek(identifier, true);\n    return cached ? cached.remoteAttrs === null && cached.inflightAttrs === null && cached.localAttrs === null : true;\n  }\n\n  /**\n   * Query the cache for whether a given resource was created locally and not\n   * yet persisted.\n   *\n   * @method isNew\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isNew(identifier: StableRecordIdentifier): boolean {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isNew || false;\n  }\n\n  /**\n   * Query the cache for whether a given resource is marked as deleted (but not\n   * necessarily persisted yet).\n   *\n   * @method isDeleted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeleted(identifier: StableRecordIdentifier): boolean {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isDeleted || false;\n  }\n\n  /**\n   * Query the cache for whether a given resource has been deleted and that deletion\n   * has also been persisted.\n   *\n   * @method isDeletionCommitted\n   * @public\n   * @param identifier\n   * @return {boolean}\n   */\n  isDeletionCommitted(identifier: StableRecordIdentifier): boolean {\n    // TODO can we assert here?\n    return this.__safePeek(identifier, true)?.isDeletionCommitted || false;\n  }\n\n  /**\n   * Private method used to populate an entry for the identifier\n   *\n   * @method _createCache\n   * @internal\n   * @param {StableRecordIdentifier} identifier\n   * @return {CachedResource}\n   */\n  _createCache(identifier: StableRecordIdentifier): CachedResource {\n    assert(`Expected no resource data to yet exist in the cache`, !this.__cache.has(identifier));\n    const cache = makeCache();\n    this.__cache.set(identifier, cache);\n    return cache;\n  }\n\n  /**\n   * Peek whether we have cached resource data matching the identifier\n   * without asserting if the resource data is missing.\n   *\n   * @method __safePeek\n   * @param {StableRecordIdentifier} identifier\n   * @param {Boolean} allowDestroyed\n   * @internal\n   * @return {CachedResource | undefined}\n   */\n  __safePeek(identifier: StableRecordIdentifier, allowDestroyed: boolean): CachedResource | undefined {\n    let resource = this.__cache.get(identifier);\n    if (!resource && allowDestroyed) {\n      resource = this.__destroyedCache.get(identifier);\n    }\n    return resource;\n  }\n\n  /**\n   * Peek whether we have cached resource data matching the identifier\n   * Asserts if the resource data is missing.\n   *\n   * @method __Peek\n   * @param {StableRecordIdentifier} identifier\n   * @param {Boolean} allowDestroyed\n   * @internal\n   * @return {CachedResource}\n   */\n  __peek(identifier: StableRecordIdentifier, allowDestroyed: boolean): CachedResource {\n    const resource = this.__safePeek(identifier, allowDestroyed);\n    assert(\n      `Expected Cache to have a resource entry for the identifier ${String(identifier)} but none was found`,\n      resource\n    );\n    return resource;\n  }\n}\n\nfunction addResourceToDocument(cache: JSONAPICache, op: AddToDocumentOperation): void {\n  assert(`Expected field to be either 'data' or 'included'`, op.field === 'data' || op.field === 'included');\n\n  const doc = cache.__documents.get(op.record.lid);\n  assert(`Expected to have a cached document on which to perform the add operation`, doc);\n  assert(`Expected to have content on the document`, doc.content);\n  const { content } = doc;\n\n  if (op.field === 'data') {\n    let shouldNotify = false;\n    assert(`Expected to have a data property on the document`, 'data' in content);\n    asDoc<ResourceDataDocument>(content);\n\n    // if data is not an array, we set the data property directly\n    if (!Array.isArray(content.data)) {\n      assert(`Expected to have a single record as the operation value`, op.value && !Array.isArray(op.value));\n      shouldNotify = content.data !== op.value;\n      if (shouldNotify) content.data = op.value;\n      assert(\n        `The value '${op.value.lid}' cannot be added from the data of document '${op.record.lid}' as it is already the current value '${content.data ? content.data.lid : '<null>'}'`,\n        shouldNotify\n      );\n    } else {\n      assert(`Expected to have a non-null operation value`, op.value);\n\n      if (Array.isArray(op.value)) {\n        if (op.index !== undefined) {\n          // for collections, because we allow duplicates we are always changed.\n          shouldNotify = true;\n          content.data.splice(op.index, 0, ...op.value);\n        } else {\n          // for collections, because we allow duplicates we are always changed.\n          shouldNotify = true;\n          content.data.push(...op.value);\n        }\n      } else {\n        if (op.index !== undefined) {\n          // for collections, because we allow duplicates we are always changed.\n          shouldNotify = true;\n          content.data.splice(op.index, 0, op.value);\n        } else {\n          // for collections, because we allow duplicates we are always changed.\n          shouldNotify = true;\n          content.data.push(op.value);\n        }\n      }\n    }\n\n    // notify\n    if (shouldNotify) cache._capabilities.notifyChange(op.record, 'updated', null);\n    return;\n  }\n\n  asDoc<ResourceDataDocument>(content);\n  content.included = content.included || [];\n\n  assert(`Expected to have a non-null operation value`, op.value);\n  if (Array.isArray(op.value)) {\n    // included is not allowed to have duplicates, so we do a dirty check here\n    assert(\n      `included should not contain duplicate members`,\n      new Set([...content.included, ...op.value]).size === content.included.length + op.value.length\n    );\n    content.included = content.included.concat(op.value);\n  } else {\n    // included is not allowed to have duplicates, so we do a dirty check here\n    assert(`included should not contain duplicate members`, content.included.includes(op.value) === false);\n    content.included.push(op.value);\n  }\n\n  // we don't notify in the included case because this is not reactively\n  // exposed. We should possibly consider doing so though for subscribers\n}\n\nfunction removeResourceFromDocument(cache: JSONAPICache, op: RemoveFromDocumentOperation): void {\n  assert(`Expected field to be either 'data' or 'included'`, op.field === 'data' || op.field === 'included');\n\n  const doc = cache.__documents.get(op.record.lid);\n  assert(`Expected to have a cached document on which to perform the remove operation`, doc);\n  assert(`Expected to have content on the document`, doc.content);\n  const { content } = doc;\n\n  if (op.field === 'data') {\n    let shouldNotify = false;\n    assert(`Expected to have a data property on the document`, 'data' in content);\n    asDoc<ResourceDataDocument>(content);\n\n    // if data is not an array, we set the data property directly\n    if (!Array.isArray(content.data)) {\n      assert(`Expected to have a single record as the operation value`, op.value && !Array.isArray(op.value));\n      shouldNotify = content.data === op.value;\n      // we only remove the value if it was our existing value\n      if (shouldNotify) content.data = null;\n      assert(\n        `The value '${op.value.lid}' cannot be removed from the data of document '${op.record.lid}' as it is not the current value '${content.data ? content.data.lid : '<null>'}'`,\n        shouldNotify\n      );\n    } else {\n      assert(`Expected to have a non-null operation value`, op.value);\n      const toRemove = Array.isArray(op.value) ? op.value : [op.value];\n\n      for (let i = 0; i < toRemove.length; i++) {\n        const value = toRemove[i];\n        if (op.index !== undefined) {\n          // in production we want to recover gracefully\n          // so we fallback to first-index-of\n          const index: number =\n            op.index < content.data.length && content.data[op.index] === value ? op.index : content.data.indexOf(value);\n\n          assert(\n            `Mismatched Index: Expected index '${op.index}' to contain the value '${value.lid}' but that value is at index '${index}'`,\n            op.index < content.data.length && content.data[op.index] === value\n          );\n\n          if (index !== -1) {\n            // we remove the first occurrence of the value\n            shouldNotify = true;\n            content.data.splice(index, 1);\n          }\n        } else {\n          // we remove the first occurrence of the value\n          const index = content.data.indexOf(value);\n          if (index !== -1) {\n            shouldNotify = true;\n            content.data.splice(index, 1);\n          }\n        }\n      }\n    }\n\n    // notify\n    if (shouldNotify) cache._capabilities.notifyChange(op.record, 'updated', null);\n  } else {\n    asDoc<ResourceDataDocument>(content);\n    content.included = content.included || [];\n\n    assert(`Expected to have a non-null operation value`, op.value);\n    const toRemove = Array.isArray(op.value) ? op.value : [op.value];\n    for (const identifier of toRemove) {\n      assert(\n        `attempted to remove a value from included that was not present in the included array`,\n        content.included.includes(identifier)\n      );\n      const index = content.included.indexOf(identifier);\n      assert(\n        `The value '${identifier.lid}' cannot be removed from the included of document '${op.record.lid}' as it is not present`,\n        index !== -1\n      );\n      if (index !== -1) {\n        content.included.splice(index, 1);\n      }\n    }\n\n    // we don't notify in the included case because this is not reactively\n    // exposed. We should possibly consider doing so though for subscribers\n  }\n}\n\nfunction areAllModelsUnloaded(wrapper: CacheCapabilitiesManager, identifiers: StableRecordIdentifier[]): boolean {\n  for (let i = 0; i < identifiers.length; ++i) {\n    const identifier = identifiers[i];\n    if (wrapper.hasRecord(identifier)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getLocalState(rel: CollectionEdge | ResourceEdge): StableRecordIdentifier[] {\n  if (isBelongsTo(rel)) {\n    return rel.localState ? [rel.localState] : [];\n  }\n  return rel.additions ? [...rel.additions] : [];\n}\n\nfunction getRemoteState(rel: CollectionEdge | ResourceEdge) {\n  if (isBelongsTo(rel)) {\n    return rel.remoteState ? [rel.remoteState] : [];\n  }\n  return rel.remoteState;\n}\n\nfunction schemaHasLegacyDefaultValueFn(schema: FieldSchema | undefined): boolean {\n  if (!schema) return false;\n  return hasLegacyDefaultValueFn(schema.options);\n}\n\nfunction hasLegacyDefaultValueFn(options: object | undefined): options is { defaultValue: () => Value } {\n  return !!options && typeof (options as { defaultValue: () => Value }).defaultValue === 'function';\n}\n\nfunction getDefaultValue(\n  schema: FieldSchema | undefined,\n  identifier: StableRecordIdentifier,\n  store: Store\n): Value | undefined {\n  assert(`AliasFields should not be directly accessed from the cache`, schema?.kind !== 'alias');\n\n  const options = schema?.options;\n\n  if (!schema || (!options && !schema.type)) {\n    return;\n  }\n\n  if (schema.kind !== 'attribute' && schema.kind !== 'field') {\n    return;\n  }\n\n  // legacy support for defaultValues that are functions\n  if (hasLegacyDefaultValueFn(options)) {\n    // If anyone opens an issue for args not working right, we'll restore + deprecate it via a Proxy\n    // that lazily instantiates the record. We don't want to provide any args here\n    // because in a non @ember-data/model world they don't make sense.\n    return options.defaultValue();\n    // legacy support for defaultValues that are primitives\n  } else if (options && 'defaultValue' in options) {\n    const defaultValue = options.defaultValue;\n    assert(\n      `Non primitive defaultValues are not supported because they are shared between all instances. If you would like to use a complex object as a default value please provide a function that returns the complex object.`,\n      typeof defaultValue !== 'object' || defaultValue === null\n    );\n    return defaultValue as Value;\n\n    // new style transforms\n  } else if (schema.kind !== 'attribute' && schema.type) {\n    const transform = store.schema.transformation(schema);\n\n    if (transform?.defaultValue) {\n      return transform.defaultValue(options || null, identifier);\n    }\n  }\n}\n\nfunction notifyAttributes(\n  storeWrapper: CacheCapabilitiesManager,\n  identifier: StableRecordIdentifier,\n  keys?: Set<string>\n) {\n  if (!keys) {\n    storeWrapper.notifyChange(identifier, 'attributes', null);\n    return;\n  }\n\n  for (const key of keys) {\n    storeWrapper.notifyChange(identifier, 'attributes', key);\n  }\n}\n\n/*\n      TODO @deprecate IGOR DAVID\n      There seems to be a potential bug here, where we will return keys that are not\n      in the schema\n  */\nfunction calculateChangedKeys(\n  cached: CachedResource,\n  updates: Exclude<ExistingResourceObject['attributes'], undefined>,\n  fields: ReturnType<Store['schema']['fields']>\n): Set<string> {\n  const changedKeys = new Set<string>();\n  const keys = Object.keys(updates);\n  const length = keys.length;\n  const localAttrs = cached.localAttrs;\n\n  const original: Record<string, unknown> = Object.assign(\n    Object.create(null) as Record<string, unknown>,\n    cached.remoteAttrs,\n    cached.inflightAttrs\n  );\n\n  for (let i = 0; i < length; i++) {\n    const key = keys[i];\n    if (!fields.has(key)) {\n      continue;\n    }\n\n    const value = updates[key];\n\n    // A value in localAttrs means the user has a local change to\n    // this attribute. We never override this value when merging\n    // updates from the backend so we should not sent a change\n    // notification if the server value differs from the original.\n    if (localAttrs && localAttrs[key] !== undefined) {\n      continue;\n    }\n\n    if (original[key] !== value) {\n      changedKeys.add(key);\n    }\n  }\n\n  return changedKeys;\n}\n\nfunction cacheIsEmpty(cached: CachedResource | undefined): boolean {\n  return !cached || (cached.remoteAttrs === null && cached.inflightAttrs === null && cached.localAttrs === null);\n}\n\nfunction _isEmpty(peeked: CachedResource | undefined): boolean {\n  if (!peeked) {\n    return true;\n  }\n  const isNew = peeked.isNew;\n  const isDeleted = peeked.isDeleted;\n  const isEmpty = cacheIsEmpty(peeked);\n\n  return (!isNew || isDeleted) && isEmpty;\n}\n\nfunction recordIsLoaded(cached: CachedResource | undefined, filterDeleted = false): boolean {\n  if (!cached) {\n    return false;\n  }\n  const isNew = cached.isNew;\n  const isEmpty = cacheIsEmpty(cached);\n\n  // if we are new we must consider ourselves loaded\n  if (isNew) {\n    return !cached.isDeleted;\n  }\n  // even if we have a past request, if we are now empty we are not loaded\n  // typically this is true after an unloadRecord call\n\n  // if we are not empty, not new && we have a fulfilled request then we are loaded\n  // we should consider allowing for something to be loaded that is simply \"not empty\".\n  // which is how RecordState currently handles this case; however, RecordState is buggy\n  // in that it does not account for unloading.\n  return filterDeleted && cached.isDeletionCommitted ? false : !isEmpty;\n}\n\nfunction _isLoading(\n  peeked: CachedResource | undefined,\n  capabilities: CacheCapabilitiesManager,\n  identifier: StableRecordIdentifier\n): boolean {\n  upgradeCapabilities(capabilities);\n  // TODO refactor things such that the cache is not required to know\n  // about isLoading\n  const req = capabilities._store.getRequestStateService();\n  // const fulfilled = req.getLastRequestForRecord(identifier);\n  const isLoaded = recordIsLoaded(peeked);\n\n  return (\n    !isLoaded &&\n    // fulfilled === null &&\n    req.getPendingRequestsForRecord(identifier).some((r) => r.type === 'query')\n  );\n}\n\nfunction setupRelationships(\n  graph: Graph,\n  fields: ReturnType<Store['schema']['fields']>,\n  identifier: StableRecordIdentifier,\n  data: ExistingResourceObject\n) {\n  for (const name in data.relationships!) {\n    const relationshipData = data.relationships[name];\n    const field = fields.get(name);\n    // TODO consider asserting if the relationship is not in the schema\n    // we intentionally ignore relationships that are not in the schema\n    if (!relationshipData || !field || !isRelationship(field)) continue;\n\n    graph.push({\n      op: 'updateRelationship',\n      record: identifier,\n      field: name,\n      value: relationshipData,\n    });\n  }\n}\n\nfunction isRelationship(field: FieldSchema): field is LegacyRelationshipField | CollectionField | ResourceField {\n  const { kind } = field;\n  return kind === 'hasMany' || kind === 'belongsTo' || kind === 'resource' || kind === 'collection';\n}\n\nfunction patchLocalAttributes(cached: CachedResource, changedRemoteKeys?: Set<string>): boolean {\n  const { localAttrs, remoteAttrs, inflightAttrs, defaultAttrs, changes } = cached;\n  if (!localAttrs) {\n    cached.changes = null;\n    return false;\n  }\n  let hasAppliedPatch = false;\n  const mutatedKeys = Object.keys(localAttrs);\n\n  for (let i = 0, length = mutatedKeys.length; i < length; i++) {\n    const attr = mutatedKeys[i];\n    const existing =\n      inflightAttrs && attr in inflightAttrs\n        ? inflightAttrs[attr]\n        : remoteAttrs && attr in remoteAttrs\n          ? remoteAttrs[attr]\n          : undefined;\n\n    if (existing === localAttrs[attr]) {\n      hasAppliedPatch = true;\n\n      // if the local change is committed, then\n      // the remoteKeyChange is no longer relevant\n      changedRemoteKeys?.delete(attr);\n\n      delete localAttrs[attr];\n      delete changes![attr];\n    }\n\n    if (defaultAttrs && attr in defaultAttrs) {\n      delete defaultAttrs[attr];\n    }\n  }\n  return hasAppliedPatch;\n}\n\nfunction asDoc<T extends ResourceDocument>(doc: unknown): asserts doc is T {}\nfunction asOp<T extends Op>(doc: unknown): asserts doc is T {}\n\nfunction putOne(\n  cache: JSONAPICache,\n  identifiers: IdentifierCache,\n  resource: ExistingResourceObject\n): StableExistingRecordIdentifier {\n  assert(\n    `You must include an 'id' for the resource data ${resource.type}`,\n    resource.id !== null && resource.id !== undefined && resource.id !== ''\n  );\n  assert(\n    `Missing Resource Type: received resource data with a type '${resource.type}' but no schema could be found with that name.`,\n    cache._capabilities.schema.hasResource(resource)\n  );\n  let identifier: StableRecordIdentifier | undefined = identifiers.peekRecordIdentifier(resource);\n\n  if (identifier) {\n    identifier = identifiers.updateRecordIdentifier(identifier, resource);\n  } else {\n    identifier = identifiers.getOrCreateRecordIdentifier(resource);\n  }\n  cache.upsert(identifier, resource, cache._capabilities.hasRecord(identifier));\n  // even if the identifier was not \"existing\" before, it is now\n  return identifier as StableExistingRecordIdentifier;\n}\n\n/*\n    Iterates over the set of internal models reachable from `this` across exactly one\n    relationship.\n  */\nfunction _directlyRelatedIdentifiersIterable(\n  storeWrapper: CacheCapabilitiesManager,\n  originating: StableRecordIdentifier\n) {\n  const graph = peekGraph(storeWrapper);\n  const initializedRelationships = graph?.identifiers.get(originating);\n\n  if (!initializedRelationships) {\n    return EMPTY_ITERATOR;\n  }\n\n  const initializedRelationshipsArr: Array<CollectionEdge | ResourceEdge> = [];\n  Object.keys(initializedRelationships).forEach((key) => {\n    const rel = initializedRelationships[key];\n    if (rel && !isImplicit(rel)) {\n      initializedRelationshipsArr.push(rel);\n    }\n  });\n\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\n  const findNext = (): StableRecordIdentifier | undefined => {\n    while (i < initializedRelationshipsArr.length) {\n      while (j < 2) {\n        const relatedIdentifiers =\n          j === 0 ? getLocalState(initializedRelationshipsArr[i]) : getRemoteState(initializedRelationshipsArr[i]);\n        while (k < relatedIdentifiers.length) {\n          const relatedIdentifier = relatedIdentifiers[k++];\n          if (relatedIdentifier !== null) {\n            return relatedIdentifier;\n          }\n        }\n        k = 0;\n        j++;\n      }\n      j = 0;\n      i++;\n    }\n    return undefined;\n  };\n\n  return {\n    iterator() {\n      return {\n        next: (): { value: StableRecordIdentifier | undefined; done: boolean } => {\n          const value = findNext();\n          return { value, done: value === undefined };\n        },\n      };\n    },\n  };\n}\n\n/*\n      Computes the set of Identifiers reachable from this Identifier.\n\n      Reachability is determined over the relationship graph (ie a graph where\n      nodes are identifiers and edges are belongs to or has many\n      relationships).\n\n      Returns an array including `this` and all identifiers reachable\n      from `this.identifier`.\n    */\nfunction _allRelatedIdentifiers(\n  storeWrapper: CacheCapabilitiesManager,\n  originating: StableRecordIdentifier\n): StableRecordIdentifier[] {\n  const array: StableRecordIdentifier[] = [];\n  const queue: StableRecordIdentifier[] = [];\n  const seen = new Set();\n  queue.push(originating);\n  while (queue.length > 0) {\n    const identifier = queue.shift()!;\n    array.push(identifier);\n    seen.add(identifier);\n\n    const iterator = _directlyRelatedIdentifiersIterable(storeWrapper, originating).iterator();\n    for (let obj = iterator.next(); !obj.done; obj = iterator.next()) {\n      const relatedIdentifier = obj.value;\n      if (relatedIdentifier && !seen.has(relatedIdentifier)) {\n        seen.add(relatedIdentifier);\n        queue.push(relatedIdentifier);\n      }\n    }\n  }\n\n  return array;\n}\n\nfunction fromBaseDocument(doc: StructuredDocument<ResourceDocument>): Partial<ResourceDocument> {\n  const resourceDocument = {} as Partial<ResourceDocument>;\n  const jsonApiDoc = doc.content;\n  if (jsonApiDoc) {\n    copyLinksAndMeta(resourceDocument, jsonApiDoc);\n  }\n  return resourceDocument;\n}\n\nfunction fromStructuredError(doc: StructuredErrorDocument<ResourceErrorDocument>): ResourceErrorDocument {\n  const errorDoc: ResourceErrorDocument = {} as ResourceErrorDocument;\n\n  if (doc.content) {\n    copyLinksAndMeta(errorDoc, doc.content);\n\n    if ('errors' in doc.content) {\n      errorDoc.errors = doc.content.errors;\n    } else if (typeof doc.error === 'object' && 'errors' in doc.error) {\n      errorDoc.errors = doc.error.errors as Array<object>;\n    } else {\n      errorDoc.errors = [{ title: doc.message }];\n    }\n  }\n\n  return errorDoc;\n}\n\nfunction copyLinksAndMeta(target: { links?: unknown; meta?: unknown }, source: object) {\n  if ('links' in source) {\n    target.links = source.links;\n  }\n  if ('meta' in source) {\n    target.meta = source.meta;\n  }\n}\n\nfunction cacheUpsert(\n  cache: JSONAPICache,\n  identifier: StableRecordIdentifier,\n  data: ExistingResourceObject,\n  calculateChanges?: boolean\n) {\n  let changedKeys: Set<string> | undefined;\n  const peeked = cache.__safePeek(identifier, false);\n  const existed = !!peeked;\n  const cached = peeked || cache._createCache(identifier);\n\n  const isLoading = /*#__NOINLINE__*/ _isLoading(peeked, cache._capabilities, identifier) || !recordIsLoaded(peeked);\n  const isUpdate = /*#__NOINLINE__*/ !_isEmpty(peeked) && !isLoading;\n\n  if (LOG_CACHE) {\n    logGroup(\n      'cache',\n      'upsert',\n      identifier.type,\n      identifier.lid,\n      existed ? 'merged' : 'inserted',\n      calculateChanges ? 'has-subscription' : ''\n    );\n    try {\n      const _data = JSON.parse(JSON.stringify(data)) as object;\n\n      // eslint-disable-next-line no-console\n      console.log(_data);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log(data);\n    }\n  }\n\n  if (cached.isNew) {\n    cached.isNew = false;\n    cache._capabilities.notifyChange(identifier, 'identity', null);\n    cache._capabilities.notifyChange(identifier, 'state', null);\n  }\n\n  const fields = cache._capabilities.schema.fields(identifier);\n\n  // if no cache entry existed, no record exists / property has been accessed\n  // and thus we do not need to notify changes to any properties.\n  if (calculateChanges && existed && data.attributes) {\n    changedKeys = calculateChangedKeys(cached, data.attributes, fields);\n  }\n\n  cached.remoteAttrs = Object.assign(\n    cached.remoteAttrs || (Object.create(null) as Record<string, unknown>),\n    data.attributes\n  );\n\n  if (cached.localAttrs) {\n    if (patchLocalAttributes(cached, changedKeys)) {\n      cache._capabilities.notifyChange(identifier, 'state', null);\n    }\n  }\n\n  if (!isUpdate) {\n    cache._capabilities.notifyChange(identifier, 'added', null);\n  }\n\n  if (data.id) {\n    cached.id = data.id;\n  }\n\n  if (data.relationships) {\n    setupRelationships(cache.__graph, fields, identifier, data);\n  }\n\n  if (changedKeys?.size) {\n    notifyAttributes(cache._capabilities, identifier, changedKeys);\n  }\n\n  if (LOG_CACHE) {\n    // eslint-disable-next-line no-console\n    console.groupEnd();\n  }\n\n  return changedKeys?.size ? Array.from(changedKeys) : undefined;\n}\n\nfunction patchCache(Cache: JSONAPICache, op: Operation): void {\n  const isRecord = isStableIdentifier(op.record);\n  const isDocument = !isRecord && isDocumentIdentifier(op.record);\n\n  assert(`Expected Cache.patch op.record to be a record or document identifier`, isRecord || isDocument);\n\n  if (LOG_CACHE) {\n    logGroup(\n      'cache',\n      'patch',\n      isRecord ? (op.record as StableRecordIdentifier).type : '<@document>',\n      op.record.lid,\n      op.op,\n      'field' in op ? op.field : op.op === 'mergeIdentifiers' ? op.value.lid : ''\n    );\n    try {\n      const _data = JSON.parse(JSON.stringify(op)) as object;\n      // eslint-disable-next-line no-console\n      console.log(_data);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.log(op);\n    }\n  }\n\n  switch (op.op) {\n    case 'mergeIdentifiers': {\n      const cache = Cache.__cache.get(op.record);\n      if (cache) {\n        Cache.__cache.set(op.value, cache);\n        Cache.__cache.delete(op.record);\n      }\n      Cache.__graph.update(op, true);\n      break;\n    }\n    case 'update': {\n      if (isRecord) {\n        if ('field' in op) {\n          const field = Cache._capabilities.schema.fields(op.record).get(op.field);\n          assert(`Expected ${op.field} to be a field on ${op.record.type}`, field);\n          if (isRelationship(field)) {\n            asOp<UpdateResourceRelationshipOperation>(op);\n            Cache.__graph.push(op);\n          } else {\n            asOp<UpdateResourceFieldOperation>(op);\n            Cache.upsert(\n              op.record,\n              {\n                type: op.record.type,\n                id: op.record.id,\n                attributes: {\n                  [op.field]: op.value,\n                },\n              },\n              Cache._capabilities.hasRecord(op.record)\n            );\n          }\n        } else {\n          asOp<UpdateResourceOperation>(op);\n          Cache.upsert(op.record, op.value, Cache._capabilities.hasRecord(op.record));\n        }\n      } else {\n        assert(`Update operations on documents is not supported`, false);\n      }\n      break;\n    }\n    case 'add': {\n      if (isRecord) {\n        if ('field' in op) {\n          asOp<AddToResourceRelationshipOperation>(op);\n          Cache.__graph.push(op);\n        } else {\n          asOp<AddResourceOperation>(op);\n          Cache.upsert(op.record, op.value, Cache._capabilities.hasRecord(op.record));\n        }\n      } else {\n        assert(`Expected a field in the add operation`, 'field' in op);\n        asOp<AddToDocumentOperation>(op);\n        addResourceToDocument(Cache, op);\n      }\n      break;\n    }\n    case 'remove': {\n      if (isRecord) {\n        if ('field' in op) {\n          asOp<RemoveFromResourceRelationshipOperation>(op);\n          Cache.__graph.push(op);\n        } else {\n          asOp<RemoveResourceOperation>(op);\n          const cached = Cache.__safePeek(op.record, false);\n          if (cached) {\n            cached.isDeleted = true;\n            cached.isDeletionCommitted = true;\n            Cache.unloadRecord(op.record);\n          } else {\n            peekGraph(Cache._capabilities)?.push({\n              op: 'deleteRecord',\n              record: op.record,\n              isNew: false,\n            });\n          }\n        }\n      } else {\n        if ('field' in op) {\n          assert(`Expected a field in the remove operation`, 'field' in op);\n\n          asOp<RemoveFromDocumentOperation>(op);\n          removeResourceFromDocument(Cache, op);\n        } else {\n          asOp<RemoveDocumentOperation>(op);\n          // TODO @runspired teardown associated state ... notify subscribers etc.\n          // This likely means that the instance cache needs to handle\n          // holding onto reactive documents instead of the CacheHandler\n          // and use a subscription to remove them.\n          // Cache.__documents.delete(op.record.lid);\n          assert(`Removing documents from the cache is not yet supported`, false);\n        }\n      }\n      break;\n    }\n    default:\n      assert(`Unhandled cache.patch operation ${(op as unknown as Op).op}`);\n  }\n\n  if (LOG_CACHE) {\n    // eslint-disable-next-line no-console\n    console.groupEnd();\n  }\n}\n"],"names":["validateDocumentFields","schema","jsonApiDoc","data","included","Error","Array","isArray","resource","validateResourceFields","verifyIncluded","options","relationships","resourceType","type","fields","relationshipDoc","Object","entries","field","get","kind","linksMode","validateBelongsToLinksMode","validateHasManyToLinksMode","async","name","links","related","relationshipData","undefined","includedDoc","find","doc","id","_relationshipDoc","_options","inspectType","obj","proto","getPrototypeOf","prototype","constructor","isSimpleObject","RELATIONSHIP_FIELD_KINDS","Reporter","capabilities","contextDocument","errors","ast","jsonStr","strict","linkage","unknownType","unknownAttribute","unknownRelationship","JSON","stringify","content","jsonToAst","loc","searchTypes","_typeFilter","allTypes","resourceTypes","Fuse","result","search","_fieldFilters","Map","searchFields","has","allFields","attrs","from","values","filter","isRemoteField","map","v","set","getLocation","path","length","priorNode","node","segment","macroCondition","getGlobalConfig","WarpDrive","env","DEBUG","test","children","childNode","child","childCandidate","key","value","error","message","push","warn","info","hasExtension","extensionName","REGISTERED_EXTENSIONS","getExtension","report","colorize","lines","split","sort","a","b","end","line","column","compareType","errorMap","errorLines","colors","counts","warning","LINE_SIZE","String","i","padEnd","errorsForLine","start","symbol","errorLine","padStart","repeat","contextStr","request","method","url","errorString","join","console","log","features","JSON_API_CACHE_VALIDATION_ERRORS","isMetaDocument","isErrorDocument","isPushedDocument","logPotentialMatches","matches","item","potentialMatches","match","getRemoteField","VALID_TOP_LEVEL_MEMBERS","validateTopLevelDocumentMembers","reporter","keys","includes","extension","isMaybeDelete","toUpperCase","op","dataMemberHasAppropriateForm","meta","jsonapi","VALID_COLLECTION_LINKS","VALID_RESOURCE_RELATIONSHIP_LINKS","VALID_RESOURCE_LINKS","validateLinks","VALID_TOP_LEVEL_LINKS","linksKeys","k","href","SINGULAR_OPS","validateDocumentResources","forEach","index","validateResourceObject","validateTopLevelResourceShape","VALID_TOP_LEVEL_RESOURCE_KEYS","hasResource","potentialTypes","lid","hasAttributes","attributes","hasRelationships","attributesLength","relationshipsLength","didYouMean","isRelationship","fieldMatches","matchedField","validateResourceAttributes","validateResourceRelationships","actualField","potentialFields","validateDocument","activeLogging","LOG_CACHE","debug","globalThis","getWarpDriveRuntimeConfig","validateResourceDocument","isImplicit","relationship","definition","upgradeCapabilities","EMPTY_ITERATOR","iterator","next","done","makeCache","remoteAttrs","localAttrs","defaultAttrs","inflightAttrs","changes","isNew","isDeleted","isDeletionCommitted","JSONAPICache","version","_capabilities","__cache","__graph","graphFor","__destroyedCache","__documents","put","_putDocument","identifierCache","Counts","totalCount","logGroup","str","count","size","structuredClone","response","groupEnd","putOne","identifiers","identifier","resourceDocument","fromStructuredError","fromBaseDocument","getOrCreateDocumentIdentifier","hasExisting","notifyChange","parentIdentifier","parentField","isStableIdentifier","record","patch","_store","_join","operation","patchCache","mutate","mutation","_data","parse","update","peek","peeked","__safePeek","assign","rels","rel","getData","store","attr","defaultValue","getDefaultValue","document","peekRequest","peekRemoteState","upsert","calculateChanges","_cbs","_run","cacheUpsert","fork","merge","cache","diff","dump","hydrate","stream","clientDidCreate","cached","_createCache","createOptions","storeWrapper","graph","propertyNames","propertyValue","fieldType","setAttr","state","hasReceivedData","isEmpty","willCommit","__peek","deprecations","DEPRECATE_RELATIONSHIP_REMOTE_UPDATE_CLEARING_LOCAL_STATE","_isDirty","inFlight","inflightRelationships","create","didCommit","committedIdentifier","payload","payloadCopy","existingId","updateRecordIdentifier","isAdapterError","code","newCanonicalAttributes","inFlightData","actualData","getOrCreateRecordIdentifier","setupRelationships","changedKeys","calculateChangedKeys","patchLocalAttributes","notifyAttributes","commitWasRejected","unloadRecord","peekGraph","unload","removeFromRecordArray","removed","relatedIdentifiers","_allRelatedIdentifiers","areAllModelsUnloaded","relatedIdentifier","disconnectRecord","delete","setTimeout","clear","getAttr","isSimplePath","attribute","attrSchema","schemaHasLegacyDefaultValueFn","basePath","current","getRemoteAttr","currentAttr","existing","existingAttr","currentLocal","nextLink","existingStr","newStr","changedAttrs","hasChangedAttrs","rollbackAttrs","dirtyKeys","Set","changedRelationships","getChanged","hasChangedRelationships","hasChanged","rollbackRelationships","rollback","getRelationship","getRemoteRelationship","getRemoteData","setIsDeleted","getErrors","allowDestroyed","addResourceToDocument","shouldNotify","splice","concat","removeResourceFromDocument","toRemove","indexOf","wrapper","hasRecord","getLocalState","isBelongsTo","localState","additions","getRemoteState","remoteState","hasLegacyDefaultValueFn","transform","transformation","updates","original","add","cacheIsEmpty","_isEmpty","recordIsLoaded","filterDeleted","_isLoading","req","getRequestStateService","isLoaded","getPendingRequestsForRecord","some","r","changedRemoteKeys","hasAppliedPatch","mutatedKeys","peekRecordIdentifier","_directlyRelatedIdentifiersIterable","originating","initializedRelationships","initializedRelationshipsArr","j","findNext","array","queue","seen","shift","copyLinksAndMeta","errorDoc","title","target","source","existed","isLoading","isUpdate","Cache","isRecord","isDocument","isDocumentIdentifier"],"mappings":"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C;AACF,MAAA,OAAOpN,MAAM;AACf;IAEA,OAAOuN,WAAW,CAAC,IAAI,EAAEvC,UAAU,EAAE/O,IAAI,EAAEmR,gBAAgB,CAAC;AAC9D;;AAEA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,EAAAA,IAAIA,GAAmB;AACrB,IAAA,MAAM,IAAIrR,KAAK,CAAC,CAAA,eAAA,CAAiB,CAAC;AACpC;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEsR,KAAKA,CAACC,KAAY,EAAiB;AACjC,IAAA,MAAM,IAAIvR,KAAK,CAAC,CAAA,eAAA,CAAiB,CAAC;AACpC;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEwR,EAAAA,IAAIA,GAAsB;AACxB,IAAA,MAAM,IAAIxR,KAAK,CAAC,CAAA,eAAA,CAAiB,CAAC;AACpC;;AAEA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEyR,EAAAA,IAAIA,GAAqC;AACvC,IAAA,MAAM,IAAIzR,KAAK,CAAC,CAAA,eAAA,CAAiB,CAAC;AACpC;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE0R,OAAOA,CAACC,MAA+B,EAAiB;AACtD,IAAA,MAAM,IAAI3R,KAAK,CAAC,iBAAiB,CAAC;AACpC;;AAEA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE4R,EAAAA,eAAeA,CAAC/C,UAAkC,EAAEvO,OAA+B,EAA2B;IAC5G,IAAA4E,cAAA,CAAAC,eAAA,EAAA,CAAAC,SAAA,CAAA4G,aAAA,CAAAC,SAAA,CAAA,EAAA;AAAA,MAAA,IAAA9G,eAAA,EAAA,CAAAC,SAA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"}