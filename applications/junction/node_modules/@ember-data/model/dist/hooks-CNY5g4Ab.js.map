{"version":3,"file":"hooks-CNY5g4Ab.js","sources":["../src/-private/hooks.ts"],"sourcesContent":["import { getOwner, setOwner } from '@ember/application';\n\nimport { setCacheFor, setRecordIdentifier, type Store, StoreMap } from '@ember-data/store/-private';\nimport { assert } from '@warp-drive/build-config/macros';\nimport type { StableRecordIdentifier } from '@warp-drive/core-types';\nimport type { Cache } from '@warp-drive/core-types/cache';\nimport type { TypeFromInstance, TypeFromInstanceOrString } from '@warp-drive/core-types/record';\n\nimport type { Model, ModelStore } from './model';\nimport { getModelFactory } from './schema-provider';\nimport { normalizeModelName } from './util';\n\nfunction recast(context: Store): asserts context is ModelStore {}\n\nexport function instantiateRecord(\n  this: Store,\n  identifier: StableRecordIdentifier,\n  createRecordArgs: { [key: string]: unknown }\n): Model {\n  const type = identifier.type;\n\n  recast(this);\n\n  const cache = this.cache;\n  // TODO deprecate allowing unknown args setting\n  const createOptions = {\n    _createProps: createRecordArgs,\n    // TODO @deprecate consider deprecating accessing record properties during init which the below is necessary for\n    _secretInit: {\n      identifier,\n      cache,\n      store: this,\n      cb: secretInit,\n    },\n  };\n\n  // ensure that `getOwner(this)` works inside a model instance\n  setOwner(createOptions, getOwner(this)!);\n  const factory = getModelFactory(this, type);\n\n  assert(`No model was found for '${type}'`, factory);\n  return factory.class.create(createOptions);\n}\n\nexport function teardownRecord(record: Model): void {\n  assert(\n    `expected to receive an instance of Model from @ember-data/model. If using a custom model make sure you implement teardownRecord`,\n    'destroy' in record\n  );\n  record.destroy();\n}\n\nexport function modelFor<T>(type: TypeFromInstance<T>): typeof Model | void;\nexport function modelFor(type: string): typeof Model | void;\nexport function modelFor<T>(this: Store, modelName: TypeFromInstanceOrString<T>): typeof Model | void {\n  assert(\n    `Attempted to call store.modelFor(), but the store instance has already been destroyed.`,\n    !this.isDestroyed && !this.isDestroying\n  );\n  assert(`You need to pass a model name to the store's modelFor method`, modelName);\n  assert(\n    `Please pass a proper model name to the store's modelFor method`,\n    typeof modelName === 'string' && modelName.length\n  );\n  recast(this);\n\n  const type = normalizeModelName(modelName);\n  const maybeFactory = getModelFactory(this, type);\n  const klass = maybeFactory && maybeFactory.class ? maybeFactory.class : null;\n\n  const ignoreType = !klass || !klass.isModel || this._forceShim;\n  if (!ignoreType) {\n    return klass;\n  }\n  assert(`No model was found for '${type}' and no schema handles the type`, this.schema.hasResource({ type }));\n}\n\nfunction secretInit(record: Model, cache: Cache, identifier: StableRecordIdentifier, store: Store): void {\n  setRecordIdentifier(record, identifier);\n  StoreMap.set(record, store);\n  setCacheFor(record, cache);\n}\n"],"names":["instantiateRecord","identifier","createRecordArgs","type","cache","createOptions","_createProps","_secretInit","store","cb","secretInit","setOwner","getOwner","factory","getModelFactory","macroCondition","getGlobalConfig","WarpDrive","env","DEBUG","test","Error","class","create","teardownRecord","record","destroy","modelFor","modelName","isDestroyed","isDestroying","length","normalizeModelName","maybeFactory","klass","ignoreType","isModel","_forceShim","schema","hasResource","setRecordIdentifier","StoreMap","set","setCacheFor"],"mappings":"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"}