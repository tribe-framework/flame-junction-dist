import { L as LOGGING } from './debugging-Dc--S1MJ.js';
import { C as CURRENT_FEATURES } from './canary-features-CFdRGi2p.js';
import { C as CURRENT_DEPRECATIONS } from './deprecations-ChFQtx-4.js';

const features = Object.keys(CURRENT_FEATURES);
const FEATURES = Object.assign({}, CURRENT_FEATURES);
features.forEach(feature => {
  let featureValue = FEATURES[feature];
  if (featureValue === null) {
    FEATURES[feature] = false;
  }
});
const config = {
  features: FEATURES,
  deprecations: Object.assign({}, CURRENT_DEPRECATIONS),
  debug: Object.assign({}, LOGGING)
};
function macros() {
  const TransformAsserts = import.meta.resolve('./babel-plugin-transform-asserts.cjs').slice(7);
  const TransformDeprecations = import.meta.resolve('./babel-plugin-transform-deprecations.cjs').slice(7);
  const TransformDebugLogging = import.meta.resolve('./babel-plugin-transform-logging.cjs').slice(7);
  const TransformFeatures = import.meta.resolve('./babel-plugin-transform-features.cjs').slice(7);
  let plugins = [[TransformAsserts, {}, '@warp-drive/build-config/asserts-stripping'], [TransformFeatures, {
    source: '@warp-drive/build-config/canary-features',
    flags: config.features
  }, '@warp-drive/build-config/canary-features-stripping'], [TransformDeprecations, {
    source: '@warp-drive/build-config/deprecations',
    flags: config.deprecations
  }, '@warp-drive/build-config/deprecation-stripping'], [TransformDebugLogging, {
    source: '@warp-drive/build-config/debugging',
    configKey: 'debug',
    runtimeKey: 'activeLogging',
    flags: config.debug
  }, '@warp-drive/build-config/debugging-stripping'], [TransformDebugLogging, {
    source: '@warp-drive/build-config/env',
    configKey: 'env',
    flags: {
      TESTING: true,
      PRODUCTION: true,
      DEBUG: true,
      IS_RECORDING: true,
      IS_CI: true,
      SHOULD_RECORD: true
    }
  }, '@warp-drive/build-config/env']];
  return plugins;
}

export { macros };
//# sourceMappingURL=babel-macros.js.map
