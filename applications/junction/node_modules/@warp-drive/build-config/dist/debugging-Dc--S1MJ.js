/**
  @module @warp-drive/build-config
 */
/**
 * ## Debug Logging
 *
 * Many portions of the internals are helpfully instrumented with logging that can be activated
 * at build time. This instrumentation is always removed from production builds or any builds
 * that has not explicitly activated it. To activate it set the appropriate flag to `true`.
 *
 * ```ts
 * setConfig(__dirname, app, {
 *   debug: {
 *     LOG_CACHE: false, // data store received to update cache with
 *     LOG_NOTIFICATIONS: false,
 *     LOG_REQUESTS: false,
 *     LOG_REQUEST_STATUS: false,
 *     LOG_IDENTIFIERS: false,
 *     LOG_GRAPH: false,
 *     LOG_INSTANCE_CACHE: false,
 *     LOG_METRIC_COUNTS: false,
 *     DEBUG_RELATIONSHIP_NOTIFICATIONS: false,
 *   }
 * });
 * ```
 *
 * @class DebugLogging
 * @public
 */
/**
 * log cache updates for both local
 * and remote state.
 *
 * @property {boolean} LOG_CACHE
 * @public
 */
const LOG_CACHE = false;

/**
 * log notifications received by the NotificationManager
 *
 * @property {boolean} LOG_NOTIFICATIONS
 * @public
 */
const LOG_NOTIFICATIONS = false;
/**
 * log requests issued by the RequestManager
 *
 * @property {boolean} LOG_REQUESTS
 * @public
 */
const LOG_REQUESTS = false;
/**
 * log updates to requests the store has issued to
 * the network (adapter) to fulfill.
 *
 * @property {boolean} LOG_REQUEST_STATUS
 * @public
 */
const LOG_REQUEST_STATUS = false;
/**
 * log peek, generation and updates to
 * Record Identifiers.
 *
 * @property {boolean} LOG_IDENTIFIERS
 * @public
 */
const LOG_IDENTIFIERS = false;
/**
 * log updates received by the graph (relationship pointer storage)
 *
 * @property {boolean} LOG_GRAPH
 * @public
 */
const LOG_GRAPH = false;
/**
 * log creation/removal of RecordData and Record
 * instances.
 *
 * @property {boolean} LOG_INSTANCE_CACHE
 * @public
 */
const LOG_INSTANCE_CACHE = false;
/**
 * Log key count metrics, useful for performance
 * debugging.
 *
 * @property {boolean} LOG_METRIC_COUNTS
 * @public
 */
const LOG_METRIC_COUNTS = false;
/**
 * Helps when debugging causes of a change notification
 * when processing an update to a hasMany relationship.
 *
 * @property {boolean} DEBUG_RELATIONSHIP_NOTIFICATIONS
 * @public
 */
const DEBUG_RELATIONSHIP_NOTIFICATIONS = false;

/**
 * A private flag to enable logging of the native Map/Set
 * constructor and method calls.
 *
 * EXTREMELY MALPERFORMANT
 *
 * LOG_METRIC_COUNTS must also be enabled.
 *
 * @typedoc
 */
const __INTERNAL_LOG_NATIVE_MAP_SET_COUNTS = false;

const LOGGING = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  DEBUG_RELATIONSHIP_NOTIFICATIONS,
  LOG_CACHE,
  LOG_GRAPH,
  LOG_IDENTIFIERS,
  LOG_INSTANCE_CACHE,
  LOG_METRIC_COUNTS,
  LOG_NOTIFICATIONS,
  LOG_REQUESTS,
  LOG_REQUEST_STATUS,
  __INTERNAL_LOG_NATIVE_MAP_SET_COUNTS
}, Symbol.toStringTag, { value: 'Module' }));

export { DEBUG_RELATIONSHIP_NOTIFICATIONS as D, LOGGING as L, __INTERNAL_LOG_NATIVE_MAP_SET_COUNTS as _, LOG_CACHE as a, LOG_NOTIFICATIONS as b, LOG_REQUESTS as c, LOG_REQUEST_STATUS as d, LOG_IDENTIFIERS as e, LOG_GRAPH as f, LOG_INSTANCE_CACHE as g, LOG_METRIC_COUNTS as h };
//# sourceMappingURL=debugging-Dc--S1MJ.js.map
