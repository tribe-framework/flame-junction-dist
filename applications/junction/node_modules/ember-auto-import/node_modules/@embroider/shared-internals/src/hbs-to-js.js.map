{"version":3,"file":"hbs-to-js.js","sourceRoot":"","sources":["hbs-to-js.ts"],"names":[],"mappings":";;;;;AAgBA,0BAmBC;AAnCD,wEAA8C;AAC9C,+BAA2B;AAe3B,SAAgB,OAAO,CAAC,WAAmB,EAAE,OAAiB;IAC5D,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE,CAAC;QACtB,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAChC,IAAI,EAAE,kBAAkB,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;QAC/C,IAAI,QAAQ,EAAE,CAAC;YACb,IAAI,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;gBAC1C,QAAQ,GAAG,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7E,CAAC;YACD,IAAI,UAAG,KAAK,GAAG,EAAE,CAAC;gBAChB,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QACD,UAAU,GAAG,mBAAmB,IAAA,0BAAc,EAAC,QAAQ,CAAC,KAAK,CAAC;IAChE,CAAC;IACD,OAAO;QACL,mEAAmE;QACnE,sCAAsC,IAAA,0BAAc,EAAC,WAAW,CAAC,IAAI,UAAU,GAAG;KACnF,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACf,CAAC","sourcesContent":["import jsStringEscape from 'js-string-escape';\nimport { sep } from 'path';\n\nexport interface Options {\n  filename?: string;\n\n  // this is a backward-compatibility feature that allows us to show old AST\n  // transforms the moduleName format they expect.\n  compatModuleNaming?: {\n    // the app root\n    rootDir: string;\n    // the app's module name\n    modulePrefix: string;\n  };\n}\n\nexport function hbsToJS(hbsContents: string, options?: Options): string {\n  let optsSource = '';\n  if (options?.filename) {\n    let filename = options.filename;\n    let { compatModuleNaming: renaming } = options;\n    if (renaming) {\n      if (filename.startsWith(renaming.rootDir)) {\n        filename = renaming.modulePrefix + filename.slice(renaming.rootDir.length);\n      }\n      if (sep !== '/') {\n        filename = filename.replace(/\\\\/g, '/');\n      }\n    }\n    optsSource = `,{ moduleName: \"${jsStringEscape(filename)}\" }`;\n  }\n  return [\n    `import { precompileTemplate } from \"@ember/template-compilation\";`,\n    `export default precompileTemplate(\"${jsStringEscape(hbsContents)}\"${optsSource})`,\n  ].join('\\n');\n}\n"]}