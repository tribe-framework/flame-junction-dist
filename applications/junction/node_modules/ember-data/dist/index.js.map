{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["/**\n <p align=\"center\">\n  <img\n    class=\"project-logo\"\n    src=\"https://raw.githubusercontent.com/emberjs/data/4612c9354e4c54d53327ec2cf21955075ce21294/ember-data-logo-light.svg#gh-light-mode-only\"\n    alt=\"EmberData\"\n    width=\"240px\"\n    title=\"EmberData\"\n    />\n</p>\n\n<p align=\"center\">\n  <br>\n  <a href=\"https://warp-drive.io\">EmberData</a> is a lightweight data library for web apps &mdash;\n  <br>\n  universal, typed, reactive, and ready to scale.\n  <br/><br/>\n<p>\n\n---\n\n<blockquote style=\"margin: 1em; padding: .1em 1em .1em 1em; border-left: solid 1em rgb(35, 134, 54); background: #e0e0e0;\">\n  <h4 style=\"color: rgb(35, 134, 54)\">üí° TIP</h4>\n  <p>\n    EmberData is going universal and rebranding as WarpDrive\n    with support for any signals based reactive framework!\n  </p>\n  <p>\n    This means you may already see some references to WarpDrive.\n  </p>\n</blockquote>\n\nEmberData provides features that make it easy to build scalable, fast, feature\nrich application &mdash; letting you ship better experiences more quickly without re-architecting your app or API. EmberData is:\n\n- ‚ö°Ô∏è Committed to Best-In-Class Performance\n- üíö Typed\n- ‚öõÔ∏è Works with any API\n- üå≤ Focused on being as tiny as possible\n- üöÄ SSR Ready\n- üîú Seamless reactivity in any framework\n- üêπ Built with ‚ô•Ô∏è by [Ember](https://emberjs.com)\n\n\n## Basic Installation\n\nInstall using your javascript package manager of choice. For instance with [pnpm](https://pnpm.io/)\n\n```no-highlight\npnpm add ember-data\n```\n\n`ember-data` is installed by default for new applications generated with `ember-cli`. You can check what version is installed by looking in the `devDependencies` hash of your project's [package.json](https://docs.npmjs.com/cli/v8/configuring-npm/package-json) file.\n\nIf you have generated a new `Ember` application using `ember-cli` but do\nnot wish to use `ember-data`, remove `ember-data` from your project's `package.json` file and run your package manager's install command to update your lockfile.\n\n## Advanced Installation\n\nEmberData is organized into primitives that compose together via public APIs. These primitives are organized into\nsmall packages encapsulating these boundaries. These packages\ndeclare peer-dependencies (sometimes optional peer dependencies)\non the other EmberData\\/WarpDrive packages they require use of.\n\n- [@ember-data/request](../modules/@ember-data%2Frequest) provides managed `fetch`\n- [@ember-data/request-utils](../modules/@ember-data%2Frequest-utils) provides optional utilities for managing requests and string manipulation\n- [@ember-data/store](../modules/@ember-data%2Fstore) provides core functionality around coordinating caching and reactivity\n- [@ember-data/tracking](../modules/@ember-data%2Ftracking) enables integration with Ember's reactivity system\n- [@ember-data/json-api](../modules/@ember-data%2Fjson-api) provides a cache for data in the [{JSON:API}](https://jsonapi.org) format.\n- [@ember-data/debug](../modules/@ember-data%2Fdebug) provides (optional) debugging support for the `ember-inspector`.\n- [@warp-drive/build-config](../modules/@warp-drive%2Fbuild-config) provides a build plugin which ensures proper settings configuration for deprecations, optional features, development/testing support and debug logging.\n- [@warp-drive/core-types](../modules/@warp-drive%2Fcore-types) provides core types and symbols used by all other packages\n- [@warp-drive/schema-record](../modules/@warp-drive%2Fschema-record) provides a flexible, schema-based approach to reactive data.\n- [@warp-drive/ember](../modules/@warp-drive%2Fember) provides Ember specific components and utilities for reactive control-flow and declarative state management.\n\nSome EmberData APIs are older than others, and these still interop via well-defined\n public API boundaries but are no longer the ideal approach.\n\n- [@ember-data/model](../modules/@ember-data%2Fmodel) provides a class-based approach to declaring schemas for reactive data.\n- [@ember-data/legacy-compat](../modules/@ember-data%2Flegacy-compat) provides support for the older adapter/serializer request paradigm that is being phased out\n- [@ember-data/adapter](../modules/@ember-data%2Fadapter) provides various network API integrations for APIs built over specific REST or [{JSON:API}](https://jsonapi.org) conventions.\n- [@ember-data/serializer](../modules/@ember-data%2Fserializer) provides an approach to normalizing and serializing data to and from an API format into the [{JSON:API}](https://jsonapi.org) format.\n\nAnd finally:\n\n- `ember-data` is a \"meta\" package which bundles many of these together for convenience in a \"legacy\" configuration.\n\n## Configuration Settings\n\n- [Configuration Settings](../modules/@warp-drive%2Fbuild-config)\n\n\n @module ember-data-overview\n @main ember-data-overview\n*/\nimport { deprecate } from '@ember/debug';\n\nimport { dependencySatisfies, importSync, macroCondition } from '@embroider/macros';\n\nimport Adapter, { BuildURLMixin } from '@ember-data/adapter';\nimport AdapterError, {\n  AbortError,\n  ConflictError,\n  ForbiddenError,\n  InvalidError,\n  NotFoundError,\n  ServerError,\n  TimeoutError,\n  UnauthorizedError,\n} from '@ember-data/adapter/error';\nimport JSONAPIAdapter from '@ember-data/adapter/json-api';\nimport RESTAdapter from '@ember-data/adapter/rest';\nimport Model, { attr, belongsTo, hasMany } from '@ember-data/model';\nimport Serializer from '@ember-data/serializer';\nimport JSONSerializer from '@ember-data/serializer/json';\nimport JSONAPISerializer from '@ember-data/serializer/json-api';\nimport RESTSerializer, { EmbeddedRecordsMixin } from '@ember-data/serializer/rest';\nimport Transform, {\n  BooleanTransform,\n  DateTransform,\n  NumberTransform,\n  StringTransform,\n} from '@ember-data/serializer/transform';\n\nimport {\n  DS,\n  Errors,\n  ManyArray,\n  PromiseArray,\n  PromiseManyArray,\n  PromiseObject,\n  RecordArrayManager,\n  Snapshot,\n  Store,\n} from './-private/index';\nimport setupContainer from './setup-container';\n\ndeprecate(\n  'Importing from `ember-data` is deprecated. Please import from the appropriate `@ember-data/*` instead.',\n  false,\n  {\n    id: 'ember-data:deprecate-legacy-imports',\n    for: 'ember-data',\n    until: '6.0',\n    since: {\n      enabled: '5.2',\n      available: '4.13',\n    },\n  }\n);\n\ninterface DSLibrary extends DS {\n  Store: typeof Store;\n  PromiseArray: typeof PromiseArray;\n  PromiseObject: typeof PromiseObject;\n  PromiseManyArray: typeof PromiseManyArray;\n  Model: typeof Model;\n  attr: typeof attr;\n  Errors: typeof Errors;\n  Snapshot: typeof Snapshot;\n  Adapter: typeof Adapter;\n  AdapterError: typeof AdapterError;\n  InvalidError: typeof InvalidError;\n  TimeoutError: typeof TimeoutError;\n  AbortError: typeof AbortError;\n  UnauthorizedError: typeof UnauthorizedError;\n  ForbiddenError: typeof ForbiddenError;\n  NotFoundError: typeof NotFoundError;\n  ConflictError: typeof ConflictError;\n  ServerError: typeof ServerError;\n  Serializer: typeof Serializer;\n  DebugAdapter?: typeof import('@ember-data/debug').default;\n  ManyArray: typeof ManyArray;\n  RecordArrayManager: typeof RecordArrayManager;\n  RESTAdapter: typeof RESTAdapter;\n  BuildURLMixin: typeof BuildURLMixin;\n  RESTSerializer: typeof RESTSerializer;\n  JSONSerializer: typeof JSONSerializer;\n  JSONAPIAdapter: typeof JSONAPIAdapter;\n  JSONAPISerializer: typeof JSONAPISerializer;\n  Transform: typeof Transform;\n  DateTransform: typeof DateTransform;\n  StringTransform: typeof StringTransform;\n  NumberTransform: typeof NumberTransform;\n  BooleanTransform: typeof BooleanTransform;\n  EmbeddedRecordsMixin: typeof EmbeddedRecordsMixin;\n  belongsTo: typeof belongsTo;\n  hasMany: typeof hasMany;\n  _setupContainer: typeof setupContainer;\n}\n\nfunction upgradeDS(obj: unknown): asserts obj is DSLibrary {}\n\nupgradeDS(DS);\n\nDS.Store = Store;\nDS.PromiseArray = PromiseArray;\nDS.PromiseObject = PromiseObject;\nDS.PromiseManyArray = PromiseManyArray;\nDS.Model = Model;\nDS.attr = attr;\nDS.Errors = Errors;\nDS.Snapshot = Snapshot;\nDS.Adapter = Adapter;\nDS.AdapterError = AdapterError;\nDS.InvalidError = InvalidError;\nDS.TimeoutError = TimeoutError;\nDS.AbortError = AbortError;\nDS.UnauthorizedError = UnauthorizedError;\nDS.ForbiddenError = ForbiddenError;\nDS.NotFoundError = NotFoundError;\nDS.ConflictError = ConflictError;\nDS.ServerError = ServerError;\nDS.Serializer = Serializer;\n\nif (macroCondition(dependencySatisfies('@ember-data/debug', '*'))) {\n  DS.DebugAdapter = importSync('@ember-data/debug') as typeof import('@ember-data/debug').default;\n}\n\nDS.ManyArray = ManyArray;\nDS.RecordArrayManager = RecordArrayManager;\nDS.RESTAdapter = RESTAdapter;\nDS.BuildURLMixin = BuildURLMixin;\nDS.RESTSerializer = RESTSerializer;\nDS.JSONSerializer = JSONSerializer;\nDS.JSONAPIAdapter = JSONAPIAdapter;\nDS.JSONAPISerializer = JSONAPISerializer;\nDS.Transform = Transform;\nDS.DateTransform = DateTransform;\nDS.StringTransform = StringTransform;\nDS.NumberTransform = NumberTransform;\nDS.BooleanTransform = BooleanTransform;\nDS.EmbeddedRecordsMixin = EmbeddedRecordsMixin;\nDS.belongsTo = belongsTo;\nDS.hasMany = hasMany;\nDS._setupContainer = setupContainer;\n\nexport default DS;\n"],"names":["deprecate","id","for","until","since","enabled","available","DS","Store","PromiseArray","PromiseObject","PromiseManyArray","Model","attr","Errors","Snapshot","Adapter","AdapterError","InvalidError","TimeoutError","AbortError","UnauthorizedError","ForbiddenError","NotFoundError","ConflictError","ServerError","Serializer","macroCondition","dependencySatisfies","DebugAdapter","importSync","ManyArray","RecordArrayManager","RESTAdapter","BuildURLMixin","RESTSerializer","JSONSerializer","JSONAPIAdapter","JSONAPISerializer","Transform","DateTransform","StringTransform","NumberTransform","BooleanTransform","EmbeddedRecordsMixin","belongsTo","hasMany","_setupContainer","setupContainer"],"mappings":"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"}