const n=Object.freeze([]);function t(){return n}const e=t(),r=t();function o(t){return t===n}function*u(n){for(let t=n.length-1;t>=0;t--)yield n[t]}function*i(n){let t=0;for(const e of n)yield[t++,e]}function c(n,t){if(!n)throw new Error(t||"assertion failure")}function f(n){On.warn(`DEPRECATION: ${n}`)}function l(n){return Object.keys(n)}function s(n){if(null==n)throw new Error("Expected value to be present");return n}function E(n,t){if(null==n)throw new Error(t);return n}function a(n="unreachable"){return new Error(n)}function h(n){throw new Error(`Exhausted ${String(n)}`)}const N=(...n)=>n;function w(n){return null!=n}function p(n,t){if(!w(n))throw new Error(`Expected present, got ${"string"==typeof n?n:t}`)}function D(n){return n.length>0}function d(n,t,e){return D(n)?t(n):e()}function _(n){return D(n)?n:null}function L(n,t="unexpected empty list"){if(!D(n))throw new Error(t)}function g(n,t="unexpected empty list"){return L(n,t),n}function m(n){return 0===n.length?void 0:n[n.length-1]}function A(n){return 0===n.length?void 0:n[0]}function I(n,t){if(null===n)return null;let e=[];for(let r of n)e.push(t(r));return e}function b(){return Object.create(null)}function y(n){return null!=n}function M(n){return"function"==typeof n||"object"==typeof n&&null!==n}class S{stack;current=null;constructor(n=[]){this.stack=n}get size(){return this.stack.length}push(n){this.current=n,this.stack.push(n)}pop(){let n=this.stack.pop();return this.current=m(this.stack)??null,void 0===n?null:n}nth(n){let t=this.stack.length;return t<n?null:s(this.stack[t-n])}isEmpty(){return 0===this.stack.length}toArray(){return this.stack}}let T,H,$,O,C;function U(n){let t=n.firstChild;for(;t;){let e=t.nextSibling;n.removeChild(t),t=e}}const k=-1,x=1,v=3,F=8,j=9,G=10,B=11,X="http://www.w3.org/1999/xhtml",R="http://www.w3.org/1998/Math/MathML",V="http://www.w3.org/2000/svg",z="http://www.w3.org/1999/xlink",J="http://www.w3.org/XML/1998/namespace",P="http://www.w3.org/2000/xmlns/",q="beforebegin",K="afterbegin",Q="beforeend",W="afterend";let Y=function(n){return n[n.MAX_SMI=1073741823]="MAX_SMI",n[n.MIN_SMI=-1073741824]="MIN_SMI",n[n.SIGN_BIT=-536870913]="SIGN_BIT",n[n.MAX_INT=536870911]="MAX_INT",n[n.MIN_INT=-536870912]="MIN_INT",n[n.FALSE_HANDLE=0]="FALSE_HANDLE",n[n.TRUE_HANDLE=1]="TRUE_HANDLE",n[n.NULL_HANDLE=2]="NULL_HANDLE",n[n.UNDEFINED_HANDLE=3]="UNDEFINED_HANDLE",n[n.ENCODED_FALSE_HANDLE=0]="ENCODED_FALSE_HANDLE",n[n.ENCODED_TRUE_HANDLE=1]="ENCODED_TRUE_HANDLE",n[n.ENCODED_NULL_HANDLE=2]="ENCODED_NULL_HANDLE",n[n.ENCODED_UNDEFINED_HANDLE=3]="ENCODED_UNDEFINED_HANDLE",n}({});function Z(n){return n>=0}function nn(n){return n>Y.ENCODED_UNDEFINED_HANDLE}function tn(...n){return[!1,!0,null,void 0,...n]}function en(n){return n%1==0&&n<=Y.MAX_INT&&n>=Y.MIN_INT}function rn(n){return n&Y.SIGN_BIT}function on(n){return n|~Y.SIGN_BIT}function un(n){return~n}function cn(n){return~n}function fn(n){return n}function ln(n){return n}function sn(n){return(n|=0)<0?rn(n):un(n)}function En(n){return(n|=0)>Y.SIGN_BIT?cn(n):on(n)}function an(n){let t={};t[n]=1;for(let e in t)if(e===n)return e;return n}[1,-1].forEach((n=>En(sn(n))));const hn="%+b:0%";function Nn(n){return n.nodeValue===hn}let wn=Object.assign;function pn(n){return Object.values(n)}function Dn(n){return Object.entries(n)}function dn(n){return Ln(n)||gn(n),n}function _n(n,t){if(null==n)return null;if(void 0===typeof document)throw new Error("Attempted to cast to a browser node in a non-browser context");if(Ln(n))return n;if(n.ownerDocument!==document)throw new Error("Attempted to cast to a browser node with a node that was not created from this document");return An(n,t)}function Ln(n){return n.nodeType===j}function gn(n){return n?.nodeType===x}function mn(n){return n?.nodeType===x&&n instanceof Element}function An(n,t){let e=!1;if(null!==n)if("string"==typeof t)e=In(n,t);else{if(!Array.isArray(t))throw a();e=t.some((t=>In(n,t)))}if(e&&n instanceof Node)return n;throw function(n,t){return new Error(`cannot cast a ${n} into ${String(t)}`)}(`SimpleElement(${n?.constructor?.name??"null"})`,t)}function In(n,t){switch(t){case"NODE":return!0;case"HTML":return n instanceof HTMLElement;case"SVG":return n instanceof SVGElement;case"ELEMENT":return n instanceof Element;default:if(t.toUpperCase()===t)throw new Error("BUG: this code is missing handling for a generic node type");return n instanceof Element&&n.tagName.toLowerCase()===t}}function bn(n,...t){let e="";for(const[r,o]of i(n))e+=`${o}${void 0!==t[r]?String(t[r]):""}`;let r=e.split("\n");for(;D(r)&&/^\s*$/u.test(A(r));)r.shift();for(;D(r)&&/^\s*$/u.test(m(r));)r.pop();let o=1/0;for(let n of r){let t=/^\s*/u.exec(n)[0].length;o=Math.min(o,t)}let u=[];for(let n of r)u.push(n.slice(o));return u.join("\n")}function yn(n){if("number"==typeof n)return n;{let t=n.errors[0];throw new Error(`Compile Error: ${t.problem} @ ${t.span.start}..${t.span.end}`)}}function Mn(n){if("error"===n.result)throw new Error(`Compile Error: ${n.problem} @ ${n.span.start}..${n.span.end}`);return n}function Sn(n){return"number"==typeof n?n:n.handle}function Tn(n){return"number"==typeof n}function Hn(n){return"number"==typeof n}function $n(n){return null}const On=console,Cn=console;function Un(n,t="unexpected unreachable branch"){throw Cn.log("unreachable",n),Cn.log(`${t} :: ${JSON.stringify(n)} (${n})`),new Error("code reached unreachable")}export{F as COMMENT_NODE,B as DOCUMENT_FRAGMENT_NODE,j as DOCUMENT_NODE,G as DOCUMENT_TYPE_NODE,x as ELEMENT_NODE,n as EMPTY_ARRAY,r as EMPTY_NUMBER_ARRAY,e as EMPTY_STRING_ARRAY,K as INSERT_AFTER_BEGIN,W as INSERT_AFTER_END,q as INSERT_BEFORE_BEGIN,Q as INSERT_BEFORE_END,Y as ImmediateConstants,On as LOCAL_LOGGER,Cn as LOGGER,X as NS_HTML,R as NS_MATHML,V as NS_SVG,z as NS_XLINK,J as NS_XML,P as NS_XMLNS,k as RAW_NODE,hn as SERIALIZATION_FIRST_NODE_STRING,S as Stack,v as TEXT_NODE,_ as arrayToOption,g as asPresentArray,c as assert,Un as assertNever,p as assertPresent,L as assertPresentArray,wn as assign,T as beginTestSteps,$n as buildUntouchableThis,_n as castToBrowser,dn as castToSimple,An as checkNode,U as clearElement,tn as constants,C as debugToString,ln as decodeHandle,En as decodeImmediate,on as decodeNegative,cn as decodePositive,f as deprecate,b as dict,t as emptyArray,fn as encodeHandle,sn as encodeImmediate,rn as encodeNegative,un as encodePositive,H as endTestSteps,Dn as entries,i as enumerate,h as exhausted,E as expect,Sn as extractHandle,A as getFirst,m as getLast,d as ifPresent,an as intern,y as isDict,mn as isElement,o as isEmptyArray,Hn as isErrHandle,Z as isHandle,nn as isNonPrimitiveHandle,M as isObject,Tn as isOkHandle,w as isPresent,D as isPresentArray,Nn as isSerializationFirstNode,gn as isSimpleElement,en as isSmallInt,l as keys,O as logStep,I as mapPresentArray,u as reverse,bn as strip,N as tuple,a as unreachable,s as unwrap,yn as unwrapHandle,Mn as unwrapTemplate,pn as values,$ as verifySteps};
//# sourceMappingURL=index.js.map
